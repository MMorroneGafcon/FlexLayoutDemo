{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SplitterNode = void 0;\n\nvar AttributeDefinitions_1 = require(\"../AttributeDefinitions\");\n\nvar Orientation_1 = require(\"../Orientation\");\n\nvar Node_1 = require(\"./Node\");\n\nvar SplitterNode =\n/** @class */\nfunction (_super) {\n  __extends(SplitterNode, _super);\n  /** @internal */\n\n\n  function SplitterNode(model) {\n    var _this = _super.call(this, model) || this;\n\n    _this._fixed = true;\n    _this._attributes.type = SplitterNode.TYPE;\n\n    model._addNode(_this);\n\n    return _this;\n  }\n  /** @internal */\n\n\n  SplitterNode.prototype.getWidth = function () {\n    return this._model.getSplitterSize();\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype.getMinWidth = function () {\n    if (this.getOrientation() === Orientation_1.Orientation.VERT) {\n      return this._model.getSplitterSize();\n    } else {\n      return 0;\n    }\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype.getHeight = function () {\n    return this._model.getSplitterSize();\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype.getMinHeight = function () {\n    if (this.getOrientation() === Orientation_1.Orientation.HORZ) {\n      return this._model.getSplitterSize();\n    } else {\n      return 0;\n    }\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype.getMinSize = function (orientation) {\n    if (orientation === Orientation_1.Orientation.HORZ) {\n      return this.getMinWidth();\n    } else {\n      return this.getMinHeight();\n    }\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype.getWeight = function () {\n    return 0;\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype._setWeight = function (value) {};\n  /** @internal */\n\n\n  SplitterNode.prototype._getPrefSize = function (orientation) {\n    return this._model.getSplitterSize();\n  };\n  /** @internal */\n\n\n  SplitterNode.prototype._updateAttrs = function (json) {};\n  /** @internal */\n\n\n  SplitterNode.prototype._getAttributeDefinitions = function () {\n    return new AttributeDefinitions_1.AttributeDefinitions();\n  };\n\n  SplitterNode.prototype.toJson = function () {\n    return undefined;\n  };\n\n  SplitterNode.TYPE = \"splitter\";\n  return SplitterNode;\n}(Node_1.Node);\n\nexports.SplitterNode = SplitterNode;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;AAAA;AAAA;AAAkCA;AAG9B;;;AACA,wBAAYC,KAAZ,EAAwB;AAAxB,gBACIC,kBAAMD,KAAN,KAAY,IADhB;;AAEIE,SAAI,CAACC,MAAL,GAAc,IAAd;AACAD,SAAI,CAACE,WAAL,CAAiBC,IAAjB,GAAwBC,YAAY,CAACC,IAArC;;AACAP,SAAK,CAACQ,QAAN,CAAeN,KAAf;;;AACH;AAED;;;AACAI;AACI,WAAO,KAAKG,MAAL,CAAYC,eAAZ,EAAP;AACH,GAFD;AAIA;;;AACAJ;AACI,QAAI,KAAKK,cAAL,OAA0BC,0BAAYC,IAA1C,EAAgD;AAC5C,aAAO,KAAKJ,MAAL,CAAYC,eAAZ,EAAP;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACJ,GAND;AAQA;;;AACAJ;AACI,WAAO,KAAKG,MAAL,CAAYC,eAAZ,EAAP;AACH,GAFD;AAIA;;;AACAJ;AACI,QAAI,KAAKK,cAAL,OAA0BC,0BAAYE,IAA1C,EAAgD;AAC5C,aAAO,KAAKL,MAAL,CAAYC,eAAZ,EAAP;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACJ,GAND;AAQA;;;AACAJ,gDAAWS,WAAX,EAAmC;AAC/B,QAAIA,WAAW,KAAKH,0BAAYE,IAAhC,EAAsC;AAClC,aAAO,KAAKE,WAAL,EAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAKC,YAAL,EAAP;AACH;AACJ,GAND;AAQA;;;AACAX;AACI,WAAO,CAAP;AACH,GAFD;AAIA;;;AACAA,gDAAWY,KAAX,EAAwB,CAAW,CAAnC;AAEA;;;AACAZ,kDAAaS,WAAb,EAAqC;AACjC,WAAO,KAAKN,MAAL,CAAYC,eAAZ,EAAP;AACH,GAFD;AAIA;;;AACAJ,kDAAaa,IAAb,EAAsB,CAAW,CAAjC;AAEA;;;AACAb;AACI,WAAO,IAAIc,2CAAJ,EAAP;AACH,GAFD;;AAIAd;AACI,WAAOe,SAAP;AACH,GAFD;;AApEgBf,sBAAe,UAAf;AAuEpB;AAAC,CAxED,CAAkCgB,WAAlC;;AAAaC","names":["__extends","model","_super","_this","_fixed","_attributes","type","SplitterNode","TYPE","_addNode","_model","getSplitterSize","getOrientation","Orientation_1","VERT","HORZ","orientation","getMinWidth","getMinHeight","value","json","AttributeDefinitions_1","undefined","Node_1","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\model\\SplitterNode.ts"],"sourcesContent":["import { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { Orientation } from \"../Orientation\";\nimport { Model } from \"./Model\";\nimport { Node } from \"./Node\";\n\nexport class SplitterNode extends Node {\n    static readonly TYPE: string = \"splitter\";\n\n    /** @internal */\n    constructor(model: Model) {\n        super(model);\n        this._fixed = true;\n        this._attributes.type = SplitterNode.TYPE;\n        model._addNode(this);\n    }\n\n    /** @internal */\n    getWidth() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    getMinWidth() {\n        if (this.getOrientation() === Orientation.VERT) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @internal */\n    getHeight() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    getMinHeight() {\n        if (this.getOrientation() === Orientation.HORZ) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /** @internal */\n    getWeight(): number {\n        return 0;\n    }\n\n    /** @internal */\n    _setWeight(value: number): void { }\n\n    /** @internal */\n    _getPrefSize(orientation: Orientation): number {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    _updateAttrs(json: any): void { }\n\n    /** @internal */\n    _getAttributeDefinitions(): AttributeDefinitions {\n        return new AttributeDefinitions();\n    }\n\n    toJson(): undefined {\n        return undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}