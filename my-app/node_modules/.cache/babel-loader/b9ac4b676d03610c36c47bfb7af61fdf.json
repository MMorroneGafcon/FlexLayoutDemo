{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Node = void 0;\n\nvar DockLocation_1 = require(\"../DockLocation\");\n\nvar Orientation_1 = require(\"../Orientation\");\n\nvar Rect_1 = require(\"../Rect\");\n\nvar Node =\n/** @class */\nfunction () {\n  /** @internal */\n  function Node(model) {\n    /** @internal */\n    this._dirty = false;\n    /** @internal */\n\n    this._tempSize = 0;\n    this._model = model;\n    this._attributes = {};\n    this._children = [];\n    this._fixed = false;\n    this._rect = Rect_1.Rect.empty();\n    this._visible = false;\n    this._listeners = {};\n  }\n\n  Node.prototype.getId = function () {\n    var id = this._attributes.id;\n\n    if (id !== undefined) {\n      return id;\n    }\n\n    id = this._model._nextUniqueId();\n\n    this._setId(id);\n\n    return id;\n  };\n\n  Node.prototype.getModel = function () {\n    return this._model;\n  };\n\n  Node.prototype.getType = function () {\n    return this._attributes.type;\n  };\n\n  Node.prototype.getParent = function () {\n    return this._parent;\n  };\n\n  Node.prototype.getChildren = function () {\n    return this._children;\n  };\n\n  Node.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Node.prototype.isVisible = function () {\n    return this._visible;\n  };\n\n  Node.prototype.getOrientation = function () {\n    if (this._parent === undefined) {\n      return this._model.isRootOrientationVertical() ? Orientation_1.Orientation.VERT : Orientation_1.Orientation.HORZ;\n    } else {\n      return Orientation_1.Orientation.flip(this._parent.getOrientation());\n    }\n  }; // event can be: resize, visibility, maximize (on tabset), close\n\n\n  Node.prototype.setEventListener = function (event, callback) {\n    this._listeners[event] = callback;\n  };\n\n  Node.prototype.removeEventListener = function (event) {\n    delete this._listeners[event];\n  };\n  /** @internal */\n\n\n  Node.prototype._setId = function (id) {\n    this._attributes.id = id;\n  };\n  /** @internal */\n\n\n  Node.prototype._fireEvent = function (event, params) {\n    // console.log(this._type, \" fireEvent \" + event + \" \" + JSON.stringify(params));\n    if (this._listeners[event] !== undefined) {\n      this._listeners[event](params);\n    }\n  };\n  /** @internal */\n\n\n  Node.prototype._getAttr = function (name) {\n    var val = this._attributes[name];\n\n    if (val === undefined) {\n      var modelName = this._getAttributeDefinitions().getModelName(name);\n\n      if (modelName !== undefined) {\n        val = this._model._getAttribute(modelName);\n      }\n    } // console.log(name + \"=\" + val);\n\n\n    return val;\n  };\n  /** @internal */\n\n\n  Node.prototype._forEachNode = function (fn, level) {\n    fn(this, level);\n    level++;\n\n    for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n      var node = _a[_i];\n\n      node._forEachNode(fn, level);\n    }\n  };\n  /** @internal */\n\n\n  Node.prototype._setVisible = function (visible) {\n    if (visible !== this._visible) {\n      this._fireEvent(\"visibility\", {\n        visible: visible\n      });\n\n      this._visible = visible;\n    }\n  };\n  /** @internal */\n\n\n  Node.prototype._getDrawChildren = function () {\n    return this._children;\n  };\n  /** @internal */\n\n\n  Node.prototype._setParent = function (parent) {\n    this._parent = parent;\n  };\n  /** @internal */\n\n\n  Node.prototype._setRect = function (rect) {\n    this._rect = rect;\n  };\n  /** @internal */\n\n\n  Node.prototype._setWeight = function (weight) {\n    this._attributes.weight = weight;\n  };\n  /** @internal */\n\n\n  Node.prototype._setSelected = function (index) {\n    this._attributes.selected = index;\n  };\n  /** @internal */\n\n\n  Node.prototype._isFixed = function () {\n    return this._fixed;\n  };\n  /** @internal */\n\n\n  Node.prototype._layout = function (rect, metrics) {\n    this._rect = rect;\n  };\n  /** @internal */\n\n\n  Node.prototype._findDropTargetNode = function (dragNode, x, y) {\n    var rtn;\n\n    if (this._rect.contains(x, y)) {\n      rtn = this.canDrop(dragNode, x, y);\n\n      if (rtn === undefined) {\n        if (this._children.length !== 0) {\n          for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            rtn = child._findDropTargetNode(dragNode, x, y);\n\n            if (rtn !== undefined) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return rtn;\n  };\n  /** @internal */\n\n\n  Node.prototype.canDrop = function (dragNode, x, y) {\n    return undefined;\n  };\n  /** @internal */\n\n\n  Node.prototype._canDockInto = function (dragNode, dropInfo) {\n    if (dropInfo != null) {\n      if (dropInfo.location === DockLocation_1.DockLocation.CENTER && dropInfo.node.isEnableDrop() === false) {\n        return false;\n      } // prevent named tabset docking into another tabset, since this would lose the header\n\n\n      if (dropInfo.location === DockLocation_1.DockLocation.CENTER && dragNode.getType() === \"tabset\" && dragNode.getName() !== undefined) {\n        return false;\n      }\n\n      if (dropInfo.location !== DockLocation_1.DockLocation.CENTER && dropInfo.node.isEnableDivide() === false) {\n        return false;\n      } // finally check model callback to check if drop allowed\n\n\n      if (this._model._getOnAllowDrop()) {\n        return this._model._getOnAllowDrop()(dragNode, dropInfo);\n      }\n    }\n\n    return true;\n  };\n  /** @internal */\n\n\n  Node.prototype._removeChild = function (childNode) {\n    var pos = this._children.indexOf(childNode);\n\n    if (pos !== -1) {\n      this._children.splice(pos, 1);\n    }\n\n    this._dirty = true;\n    return pos;\n  };\n  /** @internal */\n\n\n  Node.prototype._addChild = function (childNode, pos) {\n    if (pos != null) {\n      this._children.splice(pos, 0, childNode);\n    } else {\n      this._children.push(childNode);\n\n      pos = this._children.length - 1;\n    }\n\n    childNode._parent = this;\n    this._dirty = true;\n    return pos;\n  };\n  /** @internal */\n\n\n  Node.prototype._removeAll = function () {\n    this._children = [];\n    this._dirty = true;\n  };\n  /** @internal */\n\n\n  Node.prototype._styleWithPosition = function (style) {\n    if (style == null) {\n      style = {};\n    }\n\n    return this._rect.styleWithPosition(style);\n  };\n  /** @internal */\n\n\n  Node.prototype._getTempSize = function () {\n    return this._tempSize;\n  };\n  /** @internal */\n\n\n  Node.prototype._setTempSize = function (value) {\n    this._tempSize = value;\n  };\n  /** @internal */\n\n\n  Node.prototype.isEnableDivide = function () {\n    return true;\n  };\n  /** @internal */\n\n\n  Node.prototype._toAttributeString = function () {\n    return JSON.stringify(this._attributes, undefined, \"\\t\");\n  };\n\n  return Node;\n}();\n\nexports.Node = Node;","map":{"version":3,"mappings":"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","names":["model","_model","_attributes","_children","_fixed","_rect","Rect_1","empty","_visible","_listeners","Node","id","undefined","_nextUniqueId","_setId","type","_parent","isRootOrientationVertical","Orientation_1","VERT","HORZ","flip","getOrientation","event","callback","params","name","val","modelName","_getAttributeDefinitions","getModelName","_getAttribute","fn","level","_i","node","_forEachNode","visible","_fireEvent","parent","rect","weight","index","selected","metrics","dragNode","x","y","rtn","contains","canDrop","length","child","_findDropTargetNode","dropInfo","location","DockLocation_1","CENTER","isEnableDrop","getType","getName","isEnableDivide","_getOnAllowDrop","childNode","pos","indexOf","splice","_dirty","push","style","styleWithPosition","_tempSize","value","JSON","stringify","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\model\\Node.ts"],"sourcesContent":["import { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IJsonBorderNode, IJsonRowNode, IJsonTabNode, IJsonTabSetNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\n\nexport abstract class Node {\n    /** @internal */\n    protected _model: Model;\n    /** @internal */\n    protected _attributes: Record<string, any>;\n    /** @internal */\n    protected _parent?: Node;\n    /** @internal */\n    protected _children: Node[];\n    /** @internal */\n    protected _fixed: boolean;\n    /** @internal */\n    protected _rect: Rect;\n    /** @internal */\n    protected _visible: boolean;\n    /** @internal */\n    protected _listeners: Record<string, (params: any) => void>;\n    /** @internal */\n    protected _dirty: boolean = false;\n    /** @internal */\n    protected _tempSize: number = 0;\n\n    /** @internal */\n    protected constructor(model: Model) {\n        this._model = model;\n        this._attributes = {};\n        this._children = [];\n        this._fixed = false;\n        this._rect = Rect.empty();\n        this._visible = false;\n        this._listeners = {};\n    }\n\n    getId() {\n        let id = this._attributes.id;\n        if (id !== undefined) {\n            return id as string;\n        }\n\n        id = this._model._nextUniqueId();\n        this._setId(id);\n\n        return id as string;\n    }\n\n    getModel() {\n        return this._model;\n    }\n\n    getType() {\n        return this._attributes.type as string;\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    getChildren() {\n        return this._children;\n    }\n\n    getRect() {\n        return this._rect;\n    }\n\n    isVisible() {\n        return this._visible;\n    }\n\n    getOrientation(): Orientation {\n        if (this._parent === undefined) {\n            return this._model.isRootOrientationVertical() ? Orientation.VERT : Orientation.HORZ;\n        } else {\n            return Orientation.flip(this._parent.getOrientation());\n        }\n    }\n\n    // event can be: resize, visibility, maximize (on tabset), close\n    setEventListener(event: string, callback: (params: any) => void) {\n        this._listeners[event] = callback;\n    }\n\n    removeEventListener(event: string) {\n        delete this._listeners[event];\n    }\n\n    abstract toJson(): IJsonRowNode | IJsonBorderNode | IJsonTabSetNode | IJsonTabNode | undefined;\n\n    /** @internal */\n    _setId(id: string) {\n        this._attributes.id = id;\n    }\n\n    /** @internal */\n    _fireEvent(event: string, params: any) {\n        // console.log(this._type, \" fireEvent \" + event + \" \" + JSON.stringify(params));\n        if (this._listeners[event] !== undefined) {\n            this._listeners[event](params);\n        }\n    }\n\n    /** @internal */\n    _getAttr(name: string) {\n        let val = this._attributes[name];\n\n        if (val === undefined) {\n            const modelName = this._getAttributeDefinitions().getModelName(name);\n            if (modelName !== undefined) {\n                val = this._model._getAttribute(modelName);\n            }\n        }\n\n        // console.log(name + \"=\" + val);\n        return val;\n    }\n\n    /** @internal */\n    _forEachNode(fn: (node: Node, level: number) => void, level: number) {\n        fn(this, level);\n        level++;\n        for (const node of this._children) {\n            node._forEachNode(fn, level);\n        }\n    }\n\n    /** @internal */\n    _setVisible(visible: boolean) {\n        if (visible !== this._visible) {\n            this._fireEvent(\"visibility\", { visible });\n            this._visible = visible;\n        }\n    }\n\n    /** @internal */\n    _getDrawChildren(): Node[] | undefined {\n        return this._children;\n    }\n\n    /** @internal */\n    _setParent(parent: Node) {\n        this._parent = parent;\n    }\n\n    /** @internal */\n    _setRect(rect: Rect) {\n        this._rect = rect;\n    }\n\n    /** @internal */\n    _setWeight(weight: number) {\n        this._attributes.weight = weight;\n    }\n\n    /** @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @internal */\n    _isFixed() {\n        return this._fixed;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        this._rect = rect;\n    }\n\n    /** @internal */\n    _findDropTargetNode(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        let rtn: DropInfo | undefined;\n        if (this._rect.contains(x, y)) {\n            rtn = this.canDrop(dragNode, x, y);\n            if (rtn === undefined) {\n                if (this._children.length !== 0) {\n                    for (const child of this._children) {\n                        rtn = child._findDropTargetNode(dragNode, x, y);\n                        if (rtn !== undefined) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return rtn;\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        return undefined;\n    }\n\n    /** @internal */\n    _canDockInto(dragNode: Node & IDraggable, dropInfo: DropInfo | undefined): boolean {\n        if (dropInfo != null) {\n            if (dropInfo.location === DockLocation.CENTER && dropInfo.node.isEnableDrop() === false) {\n                return false;\n            }\n\n            // prevent named tabset docking into another tabset, since this would lose the header\n            if (dropInfo.location === DockLocation.CENTER && dragNode.getType() === \"tabset\" && dragNode.getName() !== undefined) {\n                return false;\n            }\n\n            if (dropInfo.location !== DockLocation.CENTER && dropInfo.node.isEnableDivide() === false) {\n                return false;\n            }\n\n            // finally check model callback to check if drop allowed\n            if (this._model._getOnAllowDrop()) {\n                return (this._model._getOnAllowDrop() as (dragNode: Node, dropInfo: DropInfo) => boolean)(dragNode, dropInfo);\n            }\n        }\n        return true;\n    }\n\n    /** @internal */\n    _removeChild(childNode: Node) {\n        const pos = this._children.indexOf(childNode);\n        if (pos !== -1) {\n            this._children.splice(pos, 1);\n        }\n        this._dirty = true;\n        return pos;\n    }\n\n    /** @internal */\n    _addChild(childNode: Node, pos?: number) {\n        if (pos != null) {\n            this._children.splice(pos, 0, childNode);\n        } else {\n            this._children.push(childNode);\n            pos = this._children.length - 1;\n        }\n        childNode._parent = this;\n        this._dirty = true;\n        return pos;\n    }\n\n    /** @internal */\n    _removeAll() {\n        this._children = [];\n        this._dirty = true;\n    }\n\n    /** @internal */\n    _styleWithPosition(style?: Record<string, any>) {\n        if (style == null) {\n            style = {};\n        }\n        return this._rect.styleWithPosition(style);\n    }\n\n    /** @internal */\n    _getTempSize() {\n        return this._tempSize;\n    }\n\n    /** @internal */\n    _setTempSize(value: number) {\n        this._tempSize = value;\n    }\n\n    /** @internal */\n    isEnableDivide() {\n        return true;\n    }\n\n    /** @internal */\n    _toAttributeString() {\n        return JSON.stringify(this._attributes, undefined, \"\\t\");\n    }\n\n    // implemented by subclasses\n    /** @internal */\n    abstract _updateAttrs(json: any): void;\n    /** @internal */\n    abstract _getAttributeDefinitions(): AttributeDefinitions;\n}\n"]},"metadata":{},"sourceType":"script"}