{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabSetNode = void 0;\n\nvar Attribute_1 = require(\"../Attribute\");\n\nvar AttributeDefinitions_1 = require(\"../AttributeDefinitions\");\n\nvar DockLocation_1 = require(\"../DockLocation\");\n\nvar DropInfo_1 = require(\"../DropInfo\");\n\nvar Orientation_1 = require(\"../Orientation\");\n\nvar Rect_1 = require(\"../Rect\");\n\nvar Types_1 = require(\"../Types\");\n\nvar Node_1 = require(\"./Node\");\n\nvar RowNode_1 = require(\"./RowNode\");\n\nvar TabNode_1 = require(\"./TabNode\");\n\nvar Utils_1 = require(\"./Utils\");\n\nvar TabSetNode =\n/** @class */\nfunction (_super) {\n  __extends(TabSetNode, _super);\n  /** @internal */\n\n\n  function TabSetNode(model, json) {\n    var _this = _super.call(this, model) || this;\n\n    TabSetNode._attributeDefinitions.fromJson(json, _this._attributes);\n\n    model._addNode(_this);\n\n    _this._calculatedTabBarHeight = 0;\n    _this._calculatedHeaderBarHeight = 0;\n    return _this;\n  }\n  /** @internal */\n\n\n  TabSetNode._fromJson = function (json, model) {\n    var newLayoutNode = new TabSetNode(model, json);\n\n    if (json.children != null) {\n      for (var _i = 0, _a = json.children; _i < _a.length; _i++) {\n        var jsonChild = _a[_i];\n\n        var child = TabNode_1.TabNode._fromJson(jsonChild, model);\n\n        newLayoutNode._addChild(child);\n      }\n    }\n\n    if (newLayoutNode._children.length === 0) {\n      newLayoutNode._setSelected(-1);\n    }\n\n    if (json.maximized && json.maximized === true) {\n      model._setMaximizedTabset(newLayoutNode);\n    }\n\n    if (json.active && json.active === true) {\n      model._setActiveTabset(newLayoutNode);\n    }\n\n    return newLayoutNode;\n  };\n  /** @internal */\n\n\n  TabSetNode._createAttributeDefinitions = function () {\n    var attributeDefinitions = new AttributeDefinitions_1.AttributeDefinitions();\n    attributeDefinitions.add(\"type\", TabSetNode.TYPE, true).setType(Attribute_1.Attribute.STRING).setFixed();\n    attributeDefinitions.add(\"id\", undefined).setType(Attribute_1.Attribute.STRING);\n    attributeDefinitions.add(\"weight\", 100).setType(Attribute_1.Attribute.NUMBER);\n    attributeDefinitions.add(\"width\", undefined).setType(Attribute_1.Attribute.NUMBER);\n    attributeDefinitions.add(\"height\", undefined).setType(Attribute_1.Attribute.NUMBER);\n    attributeDefinitions.add(\"selected\", 0).setType(Attribute_1.Attribute.NUMBER);\n    attributeDefinitions.add(\"name\", undefined).setType(Attribute_1.Attribute.STRING);\n    attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n    attributeDefinitions.addInherited(\"enableDeleteWhenEmpty\", \"tabSetEnableDeleteWhenEmpty\");\n    attributeDefinitions.addInherited(\"enableDrop\", \"tabSetEnableDrop\");\n    attributeDefinitions.addInherited(\"enableDrag\", \"tabSetEnableDrag\");\n    attributeDefinitions.addInherited(\"enableDivide\", \"tabSetEnableDivide\");\n    attributeDefinitions.addInherited(\"enableMaximize\", \"tabSetEnableMaximize\");\n    attributeDefinitions.addInherited(\"enableClose\", \"tabSetEnableClose\");\n    attributeDefinitions.addInherited(\"classNameTabStrip\", \"tabSetClassNameTabStrip\");\n    attributeDefinitions.addInherited(\"classNameHeader\", \"tabSetClassNameHeader\");\n    attributeDefinitions.addInherited(\"enableTabStrip\", \"tabSetEnableTabStrip\");\n    attributeDefinitions.addInherited(\"borderInsets\", \"tabSetBorderInsets\");\n    attributeDefinitions.addInherited(\"marginInsets\", \"tabSetMarginInsets\");\n    attributeDefinitions.addInherited(\"minWidth\", \"tabSetMinWidth\");\n    attributeDefinitions.addInherited(\"minHeight\", \"tabSetMinHeight\");\n    attributeDefinitions.addInherited(\"headerHeight\", \"tabSetHeaderHeight\");\n    attributeDefinitions.addInherited(\"tabStripHeight\", \"tabSetTabStripHeight\");\n    attributeDefinitions.addInherited(\"tabLocation\", \"tabSetTabLocation\");\n    attributeDefinitions.addInherited(\"autoSelectTab\", \"tabSetAutoSelectTab\").setType(Attribute_1.Attribute.BOOLEAN);\n    return attributeDefinitions;\n  };\n\n  TabSetNode.prototype.getName = function () {\n    return this._getAttr(\"name\");\n  };\n\n  TabSetNode.prototype.getSelected = function () {\n    var selected = this._attributes.selected;\n\n    if (selected !== undefined) {\n      return selected;\n    }\n\n    return -1;\n  };\n\n  TabSetNode.prototype.getSelectedNode = function () {\n    var selected = this.getSelected();\n\n    if (selected !== -1) {\n      return this._children[selected];\n    }\n\n    return undefined;\n  };\n\n  TabSetNode.prototype.getWeight = function () {\n    return this._getAttr(\"weight\");\n  };\n\n  TabSetNode.prototype.getWidth = function () {\n    return this._getAttr(\"width\");\n  };\n\n  TabSetNode.prototype.getMinWidth = function () {\n    return this._getAttr(\"minWidth\");\n  };\n\n  TabSetNode.prototype.getHeight = function () {\n    return this._getAttr(\"height\");\n  };\n\n  TabSetNode.prototype.getMinHeight = function () {\n    return this._getAttr(\"minHeight\");\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype.getMinSize = function (orientation) {\n    if (orientation === Orientation_1.Orientation.HORZ) {\n      return this.getMinWidth();\n    } else {\n      return this.getMinHeight();\n    }\n  };\n  /**\n   * Returns the config attribute that can be used to store node specific data that\n   * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n   * than directly, for example:\n   * this.state.model.doAction(\n   *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n   */\n\n\n  TabSetNode.prototype.getConfig = function () {\n    return this._attributes.config;\n  };\n\n  TabSetNode.prototype.isMaximized = function () {\n    return this._model.getMaximizedTabset() === this;\n  };\n\n  TabSetNode.prototype.isActive = function () {\n    return this._model.getActiveTabset() === this;\n  };\n\n  TabSetNode.prototype.isEnableDeleteWhenEmpty = function () {\n    return this._getAttr(\"enableDeleteWhenEmpty\");\n  };\n\n  TabSetNode.prototype.isEnableDrop = function () {\n    return this._getAttr(\"enableDrop\");\n  };\n\n  TabSetNode.prototype.isEnableDrag = function () {\n    return this._getAttr(\"enableDrag\");\n  };\n\n  TabSetNode.prototype.isEnableDivide = function () {\n    return this._getAttr(\"enableDivide\");\n  };\n\n  TabSetNode.prototype.isEnableMaximize = function () {\n    return this._getAttr(\"enableMaximize\");\n  };\n\n  TabSetNode.prototype.isEnableClose = function () {\n    return this._getAttr(\"enableClose\");\n  };\n\n  TabSetNode.prototype.canMaximize = function () {\n    if (this.isEnableMaximize()) {\n      // always allow maximize toggle if already maximized\n      if (this.getModel().getMaximizedTabset() === this) {\n        return true;\n      } // only one tabset, so disable\n\n\n      if (this.getParent() === this.getModel().getRoot() && this.getModel().getRoot().getChildren().length === 1) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  TabSetNode.prototype.isEnableTabStrip = function () {\n    return this._getAttr(\"enableTabStrip\");\n  };\n\n  TabSetNode.prototype.isAutoSelectTab = function () {\n    return this._getAttr(\"autoSelectTab\");\n  };\n\n  TabSetNode.prototype.getClassNameTabStrip = function () {\n    return this._getAttr(\"classNameTabStrip\");\n  };\n\n  TabSetNode.prototype.getClassNameHeader = function () {\n    return this._getAttr(\"classNameHeader\");\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype.calculateHeaderBarHeight = function (metrics) {\n    var headerBarHeight = this._getAttr(\"headerHeight\");\n\n    if (headerBarHeight !== 0) {\n      // its defined\n      this._calculatedHeaderBarHeight = headerBarHeight;\n    } else {\n      this._calculatedHeaderBarHeight = metrics.headerBarSize;\n    }\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype.calculateTabBarHeight = function (metrics) {\n    var tabBarHeight = this._getAttr(\"tabStripHeight\");\n\n    if (tabBarHeight !== 0) {\n      // its defined\n      this._calculatedTabBarHeight = tabBarHeight;\n    } else {\n      this._calculatedTabBarHeight = metrics.tabBarSize;\n    }\n  };\n\n  TabSetNode.prototype.getHeaderHeight = function () {\n    return this._calculatedHeaderBarHeight;\n  };\n\n  TabSetNode.prototype.getTabStripHeight = function () {\n    return this._calculatedTabBarHeight;\n  };\n\n  TabSetNode.prototype.getTabLocation = function () {\n    return this._getAttr(\"tabLocation\");\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._setWeight = function (weight) {\n    this._attributes.weight = weight;\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._setSelected = function (index) {\n    this._attributes.selected = index;\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype.canDrop = function (dragNode, x, y) {\n    var dropInfo;\n\n    if (dragNode === this) {\n      var dockLocation = DockLocation_1.DockLocation.CENTER;\n      var outlineRect = this._tabHeaderRect;\n      dropInfo = new DropInfo_1.DropInfo(this, outlineRect, dockLocation, -1, Types_1.CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n    } else if (this._contentRect.contains(x, y)) {\n      var dockLocation = DockLocation_1.DockLocation.getLocation(this._contentRect, x, y);\n      var outlineRect = dockLocation.getDockRect(this._rect);\n      dropInfo = new DropInfo_1.DropInfo(this, outlineRect, dockLocation, -1, Types_1.CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n    } else if (this._tabHeaderRect != null && this._tabHeaderRect.contains(x, y)) {\n      var r = void 0;\n      var yy = void 0;\n      var h = void 0;\n\n      if (this._children.length === 0) {\n        r = this._tabHeaderRect.clone();\n        yy = r.y + 3;\n        h = r.height - 4;\n        r.width = 2;\n      } else {\n        var child = this._children[0];\n        r = child.getTabRect();\n        yy = r.y;\n        h = r.height;\n        var p = this._tabHeaderRect.x;\n        var childCenter = 0;\n\n        for (var i = 0; i < this._children.length; i++) {\n          child = this._children[i];\n          r = child.getTabRect();\n          childCenter = r.x + r.width / 2;\n\n          if (x >= p && x < childCenter) {\n            var dockLocation = DockLocation_1.DockLocation.CENTER;\n            var outlineRect = new Rect_1.Rect(r.x - 2, yy, 3, h);\n            dropInfo = new DropInfo_1.DropInfo(this, outlineRect, dockLocation, i, Types_1.CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n            break;\n          }\n\n          p = childCenter;\n        }\n      }\n\n      if (dropInfo == null) {\n        var dockLocation = DockLocation_1.DockLocation.CENTER;\n        var outlineRect = new Rect_1.Rect(r.getRight() - 2, yy, 3, h);\n        dropInfo = new DropInfo_1.DropInfo(this, outlineRect, dockLocation, this._children.length, Types_1.CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n      }\n    }\n\n    if (!dragNode._canDockInto(dragNode, dropInfo)) {\n      return undefined;\n    }\n\n    return dropInfo;\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._layout = function (rect, metrics) {\n    this.calculateHeaderBarHeight(metrics);\n    this.calculateTabBarHeight(metrics);\n\n    if (this.isMaximized()) {\n      rect = this._model.getRoot().getRect();\n    }\n\n    rect = rect.removeInsets(this._getAttr(\"marginInsets\"));\n    this._rect = rect;\n    rect = rect.removeInsets(this._getAttr(\"borderInsets\"));\n    var showHeader = this.getName() !== undefined;\n    var y = 0;\n    var h = 0;\n\n    if (showHeader) {\n      y += this._calculatedHeaderBarHeight;\n      h += this._calculatedHeaderBarHeight;\n    }\n\n    if (this.isEnableTabStrip()) {\n      if (this.getTabLocation() === \"top\") {\n        this._tabHeaderRect = new Rect_1.Rect(rect.x, rect.y + y, rect.width, this._calculatedTabBarHeight);\n      } else {\n        this._tabHeaderRect = new Rect_1.Rect(rect.x, rect.y + rect.height - this._calculatedTabBarHeight, rect.width, this._calculatedTabBarHeight);\n      }\n\n      h += this._calculatedTabBarHeight;\n\n      if (this.getTabLocation() === \"top\") {\n        y += this._calculatedTabBarHeight;\n      }\n    }\n\n    this._contentRect = new Rect_1.Rect(rect.x, rect.y + y, rect.width, rect.height - h);\n\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n\n      child._layout(this._contentRect, metrics);\n\n      child._setVisible(i === this.getSelected());\n    }\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._delete = function () {\n    this._parent._removeChild(this);\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._remove = function (node) {\n    var removedIndex = this._removeChild(node);\n\n    this._model._tidy();\n\n    (0, Utils_1.adjustSelectedIndex)(this, removedIndex);\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype.drop = function (dragNode, location, index, select) {\n    var dockLocation = location;\n\n    if (this === dragNode) {\n      // tabset drop into itself\n      return; // dock back to itself\n    }\n\n    var dragParent = dragNode.getParent();\n    var fromIndex = 0;\n\n    if (dragParent !== undefined) {\n      fromIndex = dragParent._removeChild(dragNode);\n      (0, Utils_1.adjustSelectedIndex)(dragParent, fromIndex);\n    } // if dropping a tab back to same tabset and moving to forward position then reduce insertion index\n\n\n    if (dragNode.getType() === TabNode_1.TabNode.TYPE && dragParent === this && fromIndex < index && index > 0) {\n      index--;\n    } // simple_bundled dock to existing tabset\n\n\n    if (dockLocation === DockLocation_1.DockLocation.CENTER) {\n      var insertPos = index;\n\n      if (insertPos === -1) {\n        insertPos = this._children.length;\n      }\n\n      if (dragNode.getType() === TabNode_1.TabNode.TYPE) {\n        this._addChild(dragNode, insertPos);\n\n        if (select || select !== false && this.isAutoSelectTab()) {\n          this._setSelected(insertPos);\n        } // console.log(\"added child at : \" + insertPos);\n\n      } else {\n        for (var i = 0; i < dragNode.getChildren().length; i++) {\n          var child = dragNode.getChildren()[i];\n\n          this._addChild(child, insertPos); // console.log(\"added child at : \" + insertPos);\n\n\n          insertPos++;\n        }\n      }\n\n      this._model._setActiveTabset(this);\n    } else {\n      var tabSet = void 0;\n\n      if (dragNode instanceof TabNode_1.TabNode) {\n        // create new tabset parent\n        // console.log(\"create a new tabset\");\n        var callback = this._model._getOnCreateTabSet();\n\n        tabSet = new TabSetNode(this._model, callback ? callback(dragNode) : {});\n\n        tabSet._addChild(dragNode); // console.log(\"added child at end\");\n\n\n        dragParent = tabSet;\n      } else {\n        tabSet = dragNode;\n      }\n\n      var parentRow = this._parent;\n      var pos = parentRow.getChildren().indexOf(this);\n\n      if (parentRow.getOrientation() === dockLocation._orientation) {\n        tabSet._setWeight(this.getWeight() / 2);\n\n        this._setWeight(this.getWeight() / 2); // console.log(\"added child 50% size at: \" +  pos + dockLocation.indexPlus);\n\n\n        parentRow._addChild(tabSet, pos + dockLocation._indexPlus);\n      } else {\n        // create a new row to host the new tabset (it will go in the opposite direction)\n        // console.log(\"create a new row\");\n        var newRow = new RowNode_1.RowNode(this._model, {});\n\n        newRow._setWeight(this.getWeight());\n\n        newRow._addChild(this);\n\n        this._setWeight(50);\n\n        tabSet._setWeight(50); // console.log(\"added child 50% size at: \" +  dockLocation.indexPlus);\n\n\n        newRow._addChild(tabSet, dockLocation._indexPlus);\n\n        parentRow._removeChild(this);\n\n        parentRow._addChild(newRow, pos);\n      }\n\n      this._model._setActiveTabset(tabSet);\n    }\n\n    this._model._tidy();\n  };\n\n  TabSetNode.prototype.toJson = function () {\n    var json = {};\n\n    TabSetNode._attributeDefinitions.toJson(json, this._attributes);\n\n    json.children = this._children.map(function (child) {\n      return child.toJson();\n    });\n\n    if (this.isActive()) {\n      json.active = true;\n    }\n\n    if (this.isMaximized()) {\n      json.maximized = true;\n    }\n\n    return json;\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._updateAttrs = function (json) {\n    TabSetNode._attributeDefinitions.update(json, this._attributes);\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._getAttributeDefinitions = function () {\n    return TabSetNode._attributeDefinitions;\n  };\n  /** @internal */\n\n\n  TabSetNode.prototype._getPrefSize = function (orientation) {\n    var prefSize = this.getWidth();\n\n    if (orientation === Orientation_1.Orientation.VERT) {\n      prefSize = this.getHeight();\n    }\n\n    return prefSize;\n  };\n  /** @internal */\n\n\n  TabSetNode.getAttributeDefinitions = function () {\n    return TabSetNode._attributeDefinitions;\n  };\n\n  TabSetNode.TYPE = \"tabset\";\n  /** @internal */\n\n  TabSetNode._attributeDefinitions = TabSetNode._createAttributeDefinitions();\n  return TabSetNode;\n}(Node_1.Node);\n\nexports.TabSetNode = TabSetNode;","map":{"version":3,"mappings":"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","names":["__extends","model","json","_super","TabSetNode","_attributeDefinitions","fromJson","_this","_attributes","_addNode","_calculatedTabBarHeight","_calculatedHeaderBarHeight","newLayoutNode","children","_i","jsonChild","child","TabNode_1","_fromJson","_addChild","_children","length","_setSelected","maximized","_setMaximizedTabset","active","_setActiveTabset","attributeDefinitions","AttributeDefinitions_1","add","TYPE","setType","Attribute_1","STRING","setFixed","undefined","NUMBER","addInherited","BOOLEAN","_getAttr","selected","getSelected","orientation","Orientation_1","HORZ","getMinWidth","getMinHeight","config","_model","getMaximizedTabset","getActiveTabset","isEnableMaximize","getModel","getParent","getRoot","getChildren","metrics","headerBarHeight","headerBarSize","tabBarHeight","tabBarSize","weight","index","dragNode","x","y","dropInfo","dockLocation","DockLocation_1","CENTER","outlineRect","_tabHeaderRect","DropInfo_1","Types_1","FLEXLAYOUT__OUTLINE_RECT","_contentRect","contains","getLocation","getDockRect","_rect","r","yy","h","clone","height","width","getTabRect","p","childCenter","i","Rect_1","getRight","_canDockInto","rect","calculateHeaderBarHeight","calculateTabBarHeight","isMaximized","getRect","removeInsets","showHeader","getName","isEnableTabStrip","getTabLocation","_layout","_setVisible","_parent","_removeChild","node","removedIndex","_tidy","location","select","dragParent","fromIndex","getType","insertPos","isAutoSelectTab","tabSet","callback","_getOnCreateTabSet","parentRow","pos","indexOf","getOrientation","_orientation","_setWeight","getWeight","_indexPlus","newRow","RowNode_1","toJson","map","isActive","update","prefSize","getWidth","VERT","getHeight","_createAttributeDefinitions","Node_1","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\model\\TabSetNode.ts"],"sourcesContent":["import { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\nimport { BorderNode } from \"./BorderNode\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IDropTarget } from \"./IDropTarget\";\nimport { IJsonTabSetNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\nimport { RowNode } from \"./RowNode\";\nimport { TabNode } from \"./TabNode\";\nimport { adjustSelectedIndex } from \"./Utils\";\n\nexport class TabSetNode extends Node implements IDraggable, IDropTarget {\n    static readonly TYPE = \"tabset\";\n\n    /** @internal */\n    static _fromJson(json: any, model: Model) {\n        const newLayoutNode = new TabSetNode(model, json);\n\n        if (json.children != null) {\n            for (const jsonChild of json.children) {\n                const child = TabNode._fromJson(jsonChild, model);\n                newLayoutNode._addChild(child);\n            }\n        }\n        if (newLayoutNode._children.length === 0) {\n            newLayoutNode._setSelected(-1);\n        }\n\n        if (json.maximized && json.maximized === true) {\n            model._setMaximizedTabset(newLayoutNode);\n        }\n\n        if (json.active && json.active === true) {\n            model._setActiveTabset(newLayoutNode);\n        }\n\n        return newLayoutNode;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = TabSetNode._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", TabSetNode.TYPE, true).setType(Attribute.STRING).setFixed();\n        attributeDefinitions.add(\"id\", undefined).setType(Attribute.STRING);\n\n        attributeDefinitions.add(\"weight\", 100).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"width\", undefined).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"height\", undefined).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"selected\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"name\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n\n        attributeDefinitions.addInherited(\"enableDeleteWhenEmpty\", \"tabSetEnableDeleteWhenEmpty\");\n        attributeDefinitions.addInherited(\"enableDrop\", \"tabSetEnableDrop\");\n        attributeDefinitions.addInherited(\"enableDrag\", \"tabSetEnableDrag\");\n        attributeDefinitions.addInherited(\"enableDivide\", \"tabSetEnableDivide\");\n        attributeDefinitions.addInherited(\"enableMaximize\", \"tabSetEnableMaximize\");\n        attributeDefinitions.addInherited(\"enableClose\", \"tabSetEnableClose\");\n        attributeDefinitions.addInherited(\"classNameTabStrip\", \"tabSetClassNameTabStrip\");\n        attributeDefinitions.addInherited(\"classNameHeader\", \"tabSetClassNameHeader\");\n        attributeDefinitions.addInherited(\"enableTabStrip\", \"tabSetEnableTabStrip\");\n        attributeDefinitions.addInherited(\"borderInsets\", \"tabSetBorderInsets\");\n        attributeDefinitions.addInherited(\"marginInsets\", \"tabSetMarginInsets\");\n        attributeDefinitions.addInherited(\"minWidth\", \"tabSetMinWidth\");\n        attributeDefinitions.addInherited(\"minHeight\", \"tabSetMinHeight\");\n\n        attributeDefinitions.addInherited(\"headerHeight\", \"tabSetHeaderHeight\");\n        attributeDefinitions.addInherited(\"tabStripHeight\", \"tabSetTabStripHeight\");\n        attributeDefinitions.addInherited(\"tabLocation\", \"tabSetTabLocation\");\n        attributeDefinitions.addInherited(\"autoSelectTab\", \"tabSetAutoSelectTab\").setType(Attribute.BOOLEAN);\n        return attributeDefinitions;\n    }\n\n    /** @internal */\n    private _contentRect?: Rect;\n    /** @internal */\n    private _tabHeaderRect?: Rect;\n    /** @internal */\n    private _calculatedTabBarHeight: number;\n    /** @internal */\n    private _calculatedHeaderBarHeight: number;\n\n    /** @internal */\n    constructor(model: Model, json: any) {\n        super(model);\n\n        TabSetNode._attributeDefinitions.fromJson(json, this._attributes);\n        model._addNode(this);\n        this._calculatedTabBarHeight = 0;\n        this._calculatedHeaderBarHeight = 0;\n    }\n\n    getName() {\n        return this._getAttr(\"name\") as string | undefined;\n    }\n\n    getSelected() {\n        const selected = this._attributes.selected;\n        if (selected !== undefined) {\n            return selected as number;\n        }\n        return -1;\n    }\n\n    getSelectedNode() {\n        const selected = this.getSelected();\n        if (selected !== -1) {\n            return this._children[selected];\n        }\n        return undefined;\n    }\n\n    getWeight(): number {\n        return this._getAttr(\"weight\") as number;\n    }\n\n    getWidth() {\n        return this._getAttr(\"width\") as number | undefined;\n    }\n\n    getMinWidth() {\n        return this._getAttr(\"minWidth\") as number;\n    }\n\n    getHeight() {\n        return this._getAttr(\"height\") as number | undefined;\n    }\n\n    getMinHeight() {\n        return this._getAttr(\"minHeight\") as number;\n    }\n\n    /** @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /**\n     * Returns the config attribute that can be used to store node specific data that\n     * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n     * than directly, for example:\n     * this.state.model.doAction(\n     *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n     */\n    getConfig() {\n        return this._attributes.config;\n    }\n\n    isMaximized() {\n        return this._model.getMaximizedTabset() === this;\n    }\n\n    isActive() {\n        return this._model.getActiveTabset() === this;\n    }\n\n    isEnableDeleteWhenEmpty() {\n        return this._getAttr(\"enableDeleteWhenEmpty\") as boolean;\n    }\n\n    isEnableDrop() {\n        return this._getAttr(\"enableDrop\") as boolean;\n    }\n\n    isEnableDrag() {\n        return this._getAttr(\"enableDrag\") as boolean;\n    }\n\n    isEnableDivide() {\n        return this._getAttr(\"enableDivide\") as boolean;\n    }\n\n    isEnableMaximize() {\n        return this._getAttr(\"enableMaximize\") as boolean;\n    }\n\n    isEnableClose() {\n        return this._getAttr(\"enableClose\") as boolean;\n    }\n\n    canMaximize() {\n        if (this.isEnableMaximize()) {\n            // always allow maximize toggle if already maximized\n            if (this.getModel().getMaximizedTabset() === this) {\n                return true;\n            }\n            // only one tabset, so disable\n            if (this.getParent() === this.getModel().getRoot() && this.getModel().getRoot().getChildren().length === 1) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEnableTabStrip() {\n        return this._getAttr(\"enableTabStrip\") as boolean;\n    }\n\n    isAutoSelectTab() {\n        return this._getAttr(\"autoSelectTab\") as boolean;\n    }\n\n    getClassNameTabStrip() {\n        return this._getAttr(\"classNameTabStrip\") as string | undefined;\n    }\n\n    getClassNameHeader() {\n        return this._getAttr(\"classNameHeader\") as string | undefined;\n    }\n\n    /** @internal */\n    calculateHeaderBarHeight(metrics: ILayoutMetrics) {\n        const headerBarHeight = this._getAttr(\"headerHeight\") as number;\n        if (headerBarHeight !== 0) {\n            // its defined\n            this._calculatedHeaderBarHeight = headerBarHeight;\n        } else {\n            this._calculatedHeaderBarHeight = metrics.headerBarSize;\n        }\n    }\n\n    /** @internal */\n    calculateTabBarHeight(metrics: ILayoutMetrics) {\n        const tabBarHeight = this._getAttr(\"tabStripHeight\") as number;\n        if (tabBarHeight !== 0) {\n            // its defined\n            this._calculatedTabBarHeight = tabBarHeight;\n        } else {\n            this._calculatedTabBarHeight = metrics.tabBarSize;\n        }\n    }\n\n    getHeaderHeight() {\n        return this._calculatedHeaderBarHeight;\n    }\n\n    getTabStripHeight() {\n        return this._calculatedTabBarHeight;\n    }\n\n    getTabLocation() {\n        return this._getAttr(\"tabLocation\") as string;\n    }\n\n    /** @internal */\n    _setWeight(weight: number) {\n        this._attributes.weight = weight;\n    }\n\n    /** @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        let dropInfo;\n\n        if (dragNode === this) {\n            const dockLocation = DockLocation.CENTER;\n            const outlineRect = this._tabHeaderRect;\n            dropInfo = new DropInfo(this, outlineRect!, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n        } else if (this._contentRect!.contains(x, y)) {\n            const dockLocation = DockLocation.getLocation(this._contentRect!, x, y);\n            const outlineRect = dockLocation.getDockRect(this._rect);\n            dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n        } else if (this._tabHeaderRect != null && this._tabHeaderRect.contains(x, y)) {\n            let r: Rect;\n            let yy: number;\n            let h: number;\n            if (this._children.length === 0) {\n                r = this._tabHeaderRect.clone();\n                yy = r.y + 3;\n                h = r.height - 4;\n                r.width = 2;\n            } else {\n                let child = this._children[0] as TabNode;\n                r = child.getTabRect()!;\n                yy = r.y;\n                h = r.height;\n                let p = this._tabHeaderRect.x;\n                let childCenter = 0;\n                for (let i = 0; i < this._children.length; i++) {\n                    child = this._children[i] as TabNode;\n                    r = child.getTabRect()!;\n                    childCenter = r.x + r.width / 2;\n                    if (x >= p && x < childCenter) {\n                        const dockLocation = DockLocation.CENTER;\n                        const outlineRect = new Rect(r.x - 2, yy, 3, h);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, i, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                        break;\n                    }\n                    p = childCenter;\n                }\n            }\n            if (dropInfo == null) {\n                const dockLocation = DockLocation.CENTER;\n                const outlineRect = new Rect(r.getRight() - 2, yy, 3, h);\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n            }\n        }\n\n        if (!dragNode._canDockInto(dragNode, dropInfo)) {\n            return undefined;\n        }\n\n        return dropInfo;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        this.calculateHeaderBarHeight(metrics);\n        this.calculateTabBarHeight(metrics);\n\n        if (this.isMaximized()) {\n            rect = (this._model.getRoot() as Node).getRect();\n        }\n\n        rect = rect.removeInsets(this._getAttr(\"marginInsets\"));\n        this._rect = rect;\n        rect = rect.removeInsets(this._getAttr(\"borderInsets\"));\n\n        const showHeader = this.getName() !== undefined;\n        let y = 0;\n        let h = 0;\n        if (showHeader) {\n            y += this._calculatedHeaderBarHeight;\n            h += this._calculatedHeaderBarHeight;\n        }\n        if (this.isEnableTabStrip()) {\n            if (this.getTabLocation() === \"top\") {\n                this._tabHeaderRect = new Rect(rect.x, rect.y + y, rect.width, this._calculatedTabBarHeight);\n            } else {\n                this._tabHeaderRect = new Rect(rect.x, rect.y + rect.height - this._calculatedTabBarHeight, rect.width, this._calculatedTabBarHeight);\n            }\n            h += this._calculatedTabBarHeight;\n            if (this.getTabLocation() === \"top\") {\n                y += this._calculatedTabBarHeight;\n            }\n        }\n        this._contentRect = new Rect(rect.x, rect.y + y, rect.width, rect.height - h);\n\n        for (let i = 0; i < this._children.length; i++) {\n            const child = this._children[i];\n            child._layout(this._contentRect!, metrics);\n            child._setVisible(i === this.getSelected());\n        }\n    }\n\n    /** @internal */\n    _delete() {\n        (this._parent as RowNode)._removeChild(this);\n    }\n\n    /** @internal */\n    _remove(node: TabNode) {\n        const removedIndex = this._removeChild(node);\n        this._model._tidy();\n\n        adjustSelectedIndex(this, removedIndex);\n    }\n\n    /** @internal */\n    drop(dragNode: Node & IDraggable, location: DockLocation, index: number, select?: boolean) {\n        const dockLocation = location;\n\n        if (this === dragNode) {\n            // tabset drop into itself\n            return; // dock back to itself\n        }\n\n        let dragParent = dragNode.getParent() as BorderNode | TabSetNode | RowNode;\n        let fromIndex = 0;\n        if (dragParent !== undefined) {\n            fromIndex = dragParent._removeChild(dragNode);\n            adjustSelectedIndex(dragParent, fromIndex);\n        }\n\n        // if dropping a tab back to same tabset and moving to forward position then reduce insertion index\n        if (dragNode.getType() === TabNode.TYPE && dragParent === this && fromIndex < index && index > 0) {\n            index--;\n        }\n\n        // simple_bundled dock to existing tabset\n        if (dockLocation === DockLocation.CENTER) {\n            let insertPos = index;\n            if (insertPos === -1) {\n                insertPos = this._children.length;\n            }\n\n            if (dragNode.getType() === TabNode.TYPE) {\n                this._addChild(dragNode, insertPos);\n                if (select || (select !== false && this.isAutoSelectTab())) {\n                    this._setSelected(insertPos);\n                }\n                // console.log(\"added child at : \" + insertPos);\n            } else {\n                for (let i = 0; i < dragNode.getChildren().length; i++) {\n                    const child = dragNode.getChildren()[i];\n                    this._addChild(child, insertPos);\n                    // console.log(\"added child at : \" + insertPos);\n                    insertPos++;\n                }\n            }\n            this._model._setActiveTabset(this);\n        } else {\n            let tabSet: TabSetNode | undefined;\n            if (dragNode instanceof TabNode) {\n                // create new tabset parent\n                // console.log(\"create a new tabset\");\n                const callback = this._model._getOnCreateTabSet();\n                tabSet = new TabSetNode(this._model, callback ? callback(dragNode as TabNode) : {});\n                tabSet._addChild(dragNode);\n                // console.log(\"added child at end\");\n                dragParent = tabSet;\n            } else {\n                tabSet = dragNode as TabSetNode;\n            }\n\n            const parentRow = this._parent as Node;\n            const pos = parentRow.getChildren().indexOf(this);\n\n            if (parentRow.getOrientation() === dockLocation._orientation) {\n                tabSet._setWeight(this.getWeight() / 2);\n                this._setWeight(this.getWeight() / 2);\n                // console.log(\"added child 50% size at: \" +  pos + dockLocation.indexPlus);\n                parentRow._addChild(tabSet, pos + dockLocation._indexPlus);\n            } else {\n                // create a new row to host the new tabset (it will go in the opposite direction)\n                // console.log(\"create a new row\");\n                const newRow = new RowNode(this._model, {});\n                newRow._setWeight(this.getWeight());\n                newRow._addChild(this);\n                this._setWeight(50);\n                tabSet._setWeight(50);\n                // console.log(\"added child 50% size at: \" +  dockLocation.indexPlus);\n                newRow._addChild(tabSet, dockLocation._indexPlus);\n\n                parentRow._removeChild(this);\n                parentRow._addChild(newRow, pos);\n            }\n            this._model._setActiveTabset(tabSet);\n        }\n        this._model._tidy();\n    }\n\n    toJson(): IJsonTabSetNode {\n        const json: any = {};\n        TabSetNode._attributeDefinitions.toJson(json, this._attributes);\n        json.children = this._children.map((child) => child.toJson());\n\n        if (this.isActive()) {\n            json.active = true;\n        }\n\n        if (this.isMaximized()) {\n            json.maximized = true;\n        }\n\n        return json;\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        TabSetNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    _getAttributeDefinitions() {\n        return TabSetNode._attributeDefinitions;\n    }\n\n    /** @internal */\n    _getPrefSize(orientation: Orientation) {\n        let prefSize = this.getWidth();\n        if (orientation === Orientation.VERT) {\n            prefSize = this.getHeight();\n        }\n        return prefSize;\n    }\n\n\n    /** @internal */\n    static getAttributeDefinitions() {\n        return TabSetNode._attributeDefinitions;\n    }\n\n}\n"]},"metadata":{},"sourceType":"script"}