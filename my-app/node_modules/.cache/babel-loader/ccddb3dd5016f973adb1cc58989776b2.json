{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adjustSelectedIndex = exports.adjustSelectedIndexAfterDock = exports.adjustSelectedIndexAfterFloat = void 0;\n\nvar TabSetNode_1 = require(\"./TabSetNode\");\n\nvar BorderNode_1 = require(\"./BorderNode\");\n/** @internal */\n\n\nfunction adjustSelectedIndexAfterFloat(node) {\n  var parent = node.getParent();\n\n  if (parent !== null) {\n    if (parent instanceof TabSetNode_1.TabSetNode) {\n      var found = false;\n      var newSelected = 0;\n      var children = parent.getChildren();\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (child === node) {\n          found = true;\n        } else {\n          if (!child.isFloating()) {\n            newSelected = i;\n            if (found) break;\n          }\n        }\n      }\n\n      parent._setSelected(newSelected);\n    } else if (parent instanceof BorderNode_1.BorderNode) {\n      parent._setSelected(-1);\n    }\n  }\n}\n\nexports.adjustSelectedIndexAfterFloat = adjustSelectedIndexAfterFloat;\n/** @internal */\n\nfunction adjustSelectedIndexAfterDock(node) {\n  var parent = node.getParent();\n\n  if (parent !== null && (parent instanceof TabSetNode_1.TabSetNode || parent instanceof BorderNode_1.BorderNode)) {\n    var children = parent.getChildren();\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child === node) {\n        parent._setSelected(i);\n\n        return;\n      }\n    }\n  }\n}\n\nexports.adjustSelectedIndexAfterDock = adjustSelectedIndexAfterDock;\n/** @internal */\n\nfunction adjustSelectedIndex(parent, removedIndex) {\n  // for the tabset/border being removed from set the selected index\n  if (parent !== undefined && (parent.getType() === TabSetNode_1.TabSetNode.TYPE || parent.getType() === BorderNode_1.BorderNode.TYPE)) {\n    var selectedIndex = parent.getSelected();\n\n    if (selectedIndex !== -1) {\n      if (removedIndex === selectedIndex && parent.getChildren().length > 0) {\n        if (removedIndex >= parent.getChildren().length) {\n          // removed last tab; select new last tab\n          parent._setSelected(parent.getChildren().length - 1);\n        } else {// leave selected index as is, selecting next tab after this one\n        }\n      } else if (removedIndex < selectedIndex) {\n        parent._setSelected(selectedIndex - 1);\n      } else if (removedIndex > selectedIndex) {// leave selected index as is\n      } else {\n        parent._setSelected(-1);\n      }\n    }\n  }\n}\n\nexports.adjustSelectedIndex = adjustSelectedIndex;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;AAIA;;;AACA,SAAgBA,6BAAhB,CAA8CC,IAA9C,EAA2D;AACvD,MAAMC,MAAM,GAAGD,IAAI,CAACE,SAAL,EAAf;;AACA,MAAID,MAAM,KAAK,IAAf,EAAqB;AACjB,QAAIA,MAAM,YAAYE,uBAAtB,EAAkC;AAC9B,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAIC,WAAW,GAAG,CAAlB;AACA,UAAMC,QAAQ,GAAGL,MAAM,CAACM,WAAP,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAME,KAAK,GAAGJ,QAAQ,CAACE,CAAD,CAAtB;;AACA,YAAIE,KAAK,KAAKV,IAAd,EAAoB;AAChBI,eAAK,GAAG,IAAR;AACH,SAFD,MAEO;AACH,cAAI,CAACM,KAAK,CAACC,UAAN,EAAL,EAAyB;AACrBN,uBAAW,GAAGG,CAAd;AACA,gBAAIJ,KAAJ,EAAW;AACd;AACJ;AACJ;;AACDH,YAAM,CAACW,YAAP,CAAoBP,WAApB;AACH,KAhBD,MAgBO,IAAIJ,MAAM,YAAYY,uBAAtB,EAAkC;AACrCZ,YAAM,CAACW,YAAP,CAAoB,CAAC,CAArB;AACH;AACJ;AACJ;;AAvBDE;AAyBA;;AACA,SAAgBC,4BAAhB,CAA6Cf,IAA7C,EAA0D;AACtD,MAAMC,MAAM,GAAGD,IAAI,CAACE,SAAL,EAAf;;AACA,MAAID,MAAM,KAAK,IAAX,KAAoBA,MAAM,YAAYE,uBAAlB,IAAgCF,MAAM,YAAYY,uBAAtE,CAAJ,EAAuF;AACnF,QAAMP,QAAQ,GAAGL,MAAM,CAACM,WAAP,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAME,KAAK,GAAGJ,QAAQ,CAACE,CAAD,CAAtB;;AACA,UAAIE,KAAK,KAAKV,IAAd,EAAoB;AAChBC,cAAM,CAACW,YAAP,CAAoBJ,CAApB;;AACA;AACH;AACJ;AACJ;AACJ;;AAZDM;AAcA;;AACA,SAAgBE,mBAAhB,CAAoCf,MAApC,EAA+EgB,YAA/E,EAAmG;AAC/F;AACA,MAAIhB,MAAM,KAAKiB,SAAX,KAAyBjB,MAAM,CAACkB,OAAP,OAAqBhB,wBAAWiB,IAAhC,IAAwCnB,MAAM,CAACkB,OAAP,OAAqBN,wBAAWO,IAAjG,CAAJ,EAA4G;AACxG,QAAMC,aAAa,GAAIpB,MAAkC,CAACqB,WAAnC,EAAvB;;AACA,QAAID,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACtB,UAAIJ,YAAY,KAAKI,aAAjB,IAAkCpB,MAAM,CAACM,WAAP,GAAqBE,MAArB,GAA8B,CAApE,EAAuE;AACnE,YAAIQ,YAAY,IAAIhB,MAAM,CAACM,WAAP,GAAqBE,MAAzC,EAAiD;AAC7C;AACAR,gBAAM,CAACW,YAAP,CAAoBX,MAAM,CAACM,WAAP,GAAqBE,MAArB,GAA8B,CAAlD;AACH,SAHD,MAGO,CACH;AACH;AACJ,OAPD,MAOO,IAAIQ,YAAY,GAAGI,aAAnB,EAAkC;AACrCpB,cAAM,CAACW,YAAP,CAAoBS,aAAa,GAAG,CAApC;AACH,OAFM,MAEA,IAAIJ,YAAY,GAAGI,aAAnB,EAAkC,CACrC;AACH,OAFM,MAEA;AACHpB,cAAM,CAACW,YAAP,CAAoB,CAAC,CAArB;AACH;AACJ;AACJ;AACJ;;AArBDE","names":["adjustSelectedIndexAfterFloat","node","parent","getParent","TabSetNode_1","found","newSelected","children","getChildren","i","length","child","isFloating","_setSelected","BorderNode_1","exports","adjustSelectedIndexAfterDock","adjustSelectedIndex","removedIndex","undefined","getType","TYPE","selectedIndex","getSelected"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\model\\Utils.ts"],"sourcesContent":["import { TabSetNode } from \"./TabSetNode\";\nimport { BorderNode } from \"./BorderNode\";\nimport { RowNode } from \"./RowNode\";\nimport { TabNode } from \"./TabNode\";\n\n/** @internal */\nexport function adjustSelectedIndexAfterFloat(node: TabNode) {\n    const parent = node.getParent();\n    if (parent !== null) {\n        if (parent instanceof TabSetNode) {\n            let found = false;\n            let newSelected = 0;\n            const children = parent.getChildren();\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i] as TabNode;\n                if (child === node) {\n                    found = true;\n                } else {\n                    if (!child.isFloating()) {\n                        newSelected = i;\n                        if (found) break;\n                    }\n                }\n            }\n            parent._setSelected(newSelected);\n        } else if (parent instanceof BorderNode) {\n            parent._setSelected(-1);\n        }\n    }\n}\n\n/** @internal */\nexport function adjustSelectedIndexAfterDock(node: TabNode) {\n    const parent = node.getParent();\n    if (parent !== null && (parent instanceof TabSetNode || parent instanceof BorderNode)) {\n        const children = parent.getChildren();\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i] as TabNode;\n            if (child === node) {\n                parent._setSelected(i);\n                return;\n            }\n        }\n    }\n}\n\n/** @internal */\nexport function adjustSelectedIndex(parent: TabSetNode | BorderNode | RowNode, removedIndex: number) {\n    // for the tabset/border being removed from set the selected index\n    if (parent !== undefined && (parent.getType() === TabSetNode.TYPE || parent.getType() === BorderNode.TYPE)) {\n        const selectedIndex = (parent as TabSetNode | BorderNode).getSelected();\n        if (selectedIndex !== -1) {\n            if (removedIndex === selectedIndex && parent.getChildren().length > 0) {\n                if (removedIndex >= parent.getChildren().length) {\n                    // removed last tab; select new last tab\n                    parent._setSelected(parent.getChildren().length - 1);\n                } else {\n                    // leave selected index as is, selecting next tab after this one\n                }\n            } else if (removedIndex < selectedIndex) {\n                parent._setSelected(selectedIndex - 1);\n            } else if (removedIndex > selectedIndex) {\n                // leave selected index as is\n            } else {\n                parent._setSelected(-1);\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}