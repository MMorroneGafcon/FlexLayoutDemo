{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BorderTabSet = void 0;\n\nvar React = require(\"react\");\n\nvar DockLocation_1 = require(\"../DockLocation\");\n\nvar BorderButton_1 = require(\"./BorderButton\");\n\nvar PopupMenu_1 = require(\"../PopupMenu\");\n\nvar Actions_1 = require(\"../model/Actions\");\n\nvar I18nLabel_1 = require(\"../I18nLabel\");\n\nvar TabOverflowHook_1 = require(\"./TabOverflowHook\");\n\nvar Orientation_1 = require(\"../Orientation\");\n\nvar Types_1 = require(\"../Types\");\n\nvar Utils_1 = require(\"./Utils\");\n/** @internal */\n\n\nvar BorderTabSet = function (props) {\n  var border = props.border,\n      layout = props.layout,\n      iconFactory = props.iconFactory,\n      titleFactory = props.titleFactory,\n      icons = props.icons,\n      path = props.path;\n  var toolbarRef = React.useRef(null);\n  var overflowbuttonRef = React.useRef(null);\n  var stickyButtonsRef = React.useRef(null);\n\n  var _a = (0, TabOverflowHook_1.useTabOverflow)(border, Orientation_1.Orientation.flip(border.getOrientation()), toolbarRef, stickyButtonsRef),\n      selfRef = _a.selfRef,\n      position = _a.position,\n      userControlledLeft = _a.userControlledLeft,\n      hiddenTabs = _a.hiddenTabs,\n      onMouseWheel = _a.onMouseWheel;\n\n  var onAuxMouseClick = function (event) {\n    if ((0, Utils_1.isAuxMouseEvent)(event)) {\n      layout.auxMouseClick(border, event);\n    }\n  };\n\n  var onContextMenu = function (event) {\n    layout.showContextMenu(border, event);\n  };\n\n  var onInterceptMouseDown = function (event) {\n    event.stopPropagation();\n  };\n\n  var onOverflowClick = function (event) {\n    var callback = layout.getShowOverflowMenu();\n\n    if (callback !== undefined) {\n      callback(border, event, hiddenTabs, onOverflowItemSelect);\n    } else {\n      var element = overflowbuttonRef.current;\n      (0, PopupMenu_1.showPopup)(element, hiddenTabs, onOverflowItemSelect, layout, iconFactory, titleFactory);\n    }\n\n    event.stopPropagation();\n  };\n\n  var onOverflowItemSelect = function (item) {\n    layout.doAction(Actions_1.Actions.selectTab(item.node.getId()));\n    userControlledLeft.current = false;\n  };\n\n  var onFloatTab = function (event) {\n    var selectedTabNode = border.getChildren()[border.getSelected()];\n\n    if (selectedTabNode !== undefined) {\n      layout.doAction(Actions_1.Actions.floatTab(selectedTabNode.getId()));\n    }\n\n    event.stopPropagation();\n  };\n\n  var cm = layout.getClassName;\n  var style = border.getTabHeaderRect().styleWithPosition({});\n  var tabs = [];\n\n  var layoutTab = function (i) {\n    var isSelected = border.getSelected() === i;\n    var child = border.getChildren()[i];\n    tabs.push(React.createElement(BorderButton_1.BorderButton, {\n      layout: layout,\n      border: border.getLocation().getName(),\n      node: child,\n      path: path + \"/tb\" + i,\n      key: child.getId(),\n      selected: isSelected,\n      iconFactory: iconFactory,\n      titleFactory: titleFactory,\n      icons: icons\n    }));\n    tabs.push(React.createElement(\"div\", {\n      key: \"divider\" + i,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TAB_DIVIDER)\n    }));\n  };\n\n  for (var i = 0; i < border.getChildren().length; i++) {\n    layoutTab(i);\n  }\n\n  var borderClasses = cm(Types_1.CLASSES.FLEXLAYOUT__BORDER) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_ + border.getLocation().getName());\n\n  if (border.getClassName() !== undefined) {\n    borderClasses += \" \" + border.getClassName();\n  } // allow customization of tabset right/bottom buttons\n\n\n  var buttons = [];\n  var renderState = {\n    headerContent: {},\n    buttons: buttons,\n    stickyButtons: [],\n    headerButtons: []\n  };\n  layout.customizeTabSet(border, renderState);\n  buttons = renderState.buttons;\n  var toolbar;\n\n  if (hiddenTabs.length > 0) {\n    var overflowTitle = layout.i18nName(I18nLabel_1.I18nLabel.Overflow_Menu_Tooltip);\n    var overflowContent = void 0;\n\n    if (typeof icons.more === \"function\") {\n      overflowContent = icons.more(border, hiddenTabs);\n    } else {\n      overflowContent = React.createElement(React.Fragment, null, icons.more, React.createElement(\"div\", {\n        className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)\n      }, hiddenTabs.length));\n    }\n\n    buttons.push(React.createElement(\"button\", {\n      key: \"overflowbutton\",\n      ref: overflowbuttonRef,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_ + border.getLocation().getName()),\n      title: overflowTitle,\n      onClick: onOverflowClick,\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown\n    }, overflowContent));\n  }\n\n  var selectedIndex = border.getSelected();\n\n  if (selectedIndex !== -1) {\n    var selectedTabNode = border.getChildren()[selectedIndex];\n\n    if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n      var floatTitle = layout.i18nName(I18nLabel_1.I18nLabel.Float_Tab);\n      buttons.push(React.createElement(\"button\", {\n        key: \"float\",\n        title: floatTitle,\n        className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT),\n        onClick: onFloatTab,\n        onMouseDown: onInterceptMouseDown,\n        onTouchStart: onInterceptMouseDown\n      }, typeof icons.popout === \"function\" ? icons.popout(selectedTabNode) : icons.popout));\n    }\n  }\n\n  toolbar = React.createElement(\"div\", {\n    key: \"toolbar\",\n    ref: toolbarRef,\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_ + border.getLocation().getName())\n  }, buttons);\n  style = layout.styleFont(style);\n  var innerStyle = {};\n  var borderHeight = border.getBorderBarSize() - 1;\n\n  if (border.getLocation() === DockLocation_1.DockLocation.LEFT) {\n    innerStyle = {\n      right: borderHeight,\n      height: borderHeight,\n      top: position\n    };\n  } else if (border.getLocation() === DockLocation_1.DockLocation.RIGHT) {\n    innerStyle = {\n      left: borderHeight,\n      height: borderHeight,\n      top: position\n    };\n  } else {\n    innerStyle = {\n      height: borderHeight,\n      left: position\n    };\n  }\n\n  return React.createElement(\"div\", {\n    ref: selfRef,\n    dir: \"ltr\",\n    style: style,\n    className: borderClasses,\n    \"data-layout-path\": path,\n    onClick: onAuxMouseClick,\n    onAuxClick: onAuxMouseClick,\n    onContextMenu: onContextMenu,\n    onWheel: onMouseWheel\n  }, React.createElement(\"div\", {\n    style: {\n      height: borderHeight\n    },\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_INNER) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_INNER_ + border.getLocation().getName())\n  }, React.createElement(\"div\", {\n    style: innerStyle,\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_ + border.getLocation().getName())\n  }, tabs)), toolbar);\n};\n\nexports.BorderTabSet = BorderTabSet;","map":{"version":3,"mappings":"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","names":["BorderTabSet","props","layout","iconFactory","titleFactory","icons","path","toolbarRef","React","useRef","overflowbuttonRef","stickyButtonsRef","border","Orientation_1","flip","getOrientation","selfRef","position","userControlledLeft","hiddenTabs","onMouseWheel","onAuxMouseClick","event","auxMouseClick","onContextMenu","showContextMenu","onInterceptMouseDown","stopPropagation","onOverflowClick","callback","getShowOverflowMenu","undefined","onOverflowItemSelect","element","current","item","doAction","Actions_1","selectTab","node","getId","onFloatTab","selectedTabNode","getChildren","getSelected","floatTab","cm","getClassName","style","getTabHeaderRect","styleWithPosition","tabs","layoutTab","i","isSelected","child","push","BorderButton_1","getLocation","getName","key","selected","className","Types_1","FLEXLAYOUT__BORDER_TAB_DIVIDER","length","borderClasses","FLEXLAYOUT__BORDER","FLEXLAYOUT__BORDER_","buttons","renderState","headerContent","stickyButtons","headerButtons","customizeTabSet","toolbar","overflowTitle","i18nName","I18nLabel_1","Overflow_Menu_Tooltip","overflowContent","more","FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT","ref","FLEXLAYOUT__BORDER_TOOLBAR_BUTTON","FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW","FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_","title","onClick","onMouseDown","onTouchStart","selectedIndex","isSupportsPopout","isEnableFloat","isFloating","floatTitle","Float_Tab","FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT","popout","FLEXLAYOUT__BORDER_TOOLBAR","FLEXLAYOUT__BORDER_TOOLBAR_","styleFont","innerStyle","borderHeight","getBorderBarSize","DockLocation_1","LEFT","right","height","top","RIGHT","left","dir","onAuxClick","onWheel","FLEXLAYOUT__BORDER_INNER","FLEXLAYOUT__BORDER_INNER_","FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER","FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\view\\BorderTabSet.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { DockLocation } from \"../DockLocation\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { TabNode } from \"../model/TabNode\";\nimport { BorderButton } from \"./BorderButton\";\nimport { IIcons, ILayoutCallbacks } from \"./Layout\";\nimport { showPopup } from \"../PopupMenu\";\nimport { Actions } from \"../model/Actions\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { useTabOverflow } from \"./TabOverflowHook\";\nimport { Orientation } from \"../Orientation\";\nimport { CLASSES } from \"../Types\";\nimport { isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface IBorderTabSetProps {\n    border: BorderNode;\n    layout: ILayoutCallbacks;\n    iconFactory?: (node: TabNode) => React.ReactNode | undefined;\n    titleFactory?: (node: TabNode) => React.ReactNode | undefined;\n    icons: IIcons;\n    path: string;\n}\n\n/** @internal */\nexport const BorderTabSet = (props: IBorderTabSetProps) => {\n    const { border, layout, iconFactory, titleFactory, icons, path } = props;\n\n    const toolbarRef = React.useRef<HTMLDivElement | null>(null);\n    const overflowbuttonRef = React.useRef<HTMLButtonElement | null>(null);\n    const stickyButtonsRef = React.useRef<HTMLDivElement | null>(null);\n\n    const { selfRef, position, userControlledLeft, hiddenTabs, onMouseWheel } = useTabOverflow(border, Orientation.flip(border.getOrientation()), toolbarRef, stickyButtonsRef);\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(border, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(border, event);\n    };\n\n    const onInterceptMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.MouseEvent<HTMLButtonElement, MouseEvent> | React.TouchEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n    };\n\n    const onOverflowClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const callback = layout.getShowOverflowMenu();\n        if (callback !== undefined) {\n            callback(border, event, hiddenTabs, onOverflowItemSelect);\n        } else {\n            const element = overflowbuttonRef.current!;\n            showPopup(element,\n                hiddenTabs,\n                onOverflowItemSelect,\n                layout,\n                iconFactory,\n                titleFactory);\n        }\n        event.stopPropagation();\n    };\n\n    const onOverflowItemSelect = (item: { node: TabNode; index: number }) => {\n        layout.doAction(Actions.selectTab(item.node.getId()));\n        userControlledLeft.current = false;\n    };\n\n    const onFloatTab = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const selectedTabNode = border.getChildren()[border.getSelected()] as TabNode;\n        if (selectedTabNode !== undefined) {\n            layout.doAction(Actions.floatTab(selectedTabNode.getId()));\n        }\n        event.stopPropagation();\n    };\n\n    const cm = layout.getClassName;\n\n    let style = border.getTabHeaderRect()!.styleWithPosition({});\n    const tabs: any = [];\n\n    const layoutTab = (i: number) => {\n        let isSelected = border.getSelected() === i;\n        let child = border.getChildren()[i] as TabNode;\n\n        tabs.push(\n            <BorderButton\n                layout={layout}\n                border={border.getLocation().getName()}\n                node={child}\n                path={path + \"/tb\" + i}\n                key={child.getId()}\n                selected={isSelected}\n                iconFactory={iconFactory}\n                titleFactory={titleFactory}\n                icons={icons}\n            />\n        );\n        tabs.push(\n            <div key={\"divider\" + i} className={cm(CLASSES.FLEXLAYOUT__BORDER_TAB_DIVIDER)}></div>\n        );\n\n    };\n\n    for (let i = 0; i < border.getChildren().length; i++) {\n        layoutTab(i);\n    }\n\n    let borderClasses = cm(CLASSES.FLEXLAYOUT__BORDER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_ + border.getLocation().getName());\n    if (border.getClassName() !== undefined) {\n        borderClasses += \" \" + border.getClassName();\n    }\n\n    // allow customization of tabset right/bottom buttons\n    let buttons: any[] = [];\n    const renderState = { headerContent: {}, buttons, stickyButtons: [], headerButtons: [] };\n    layout.customizeTabSet(border, renderState);\n    buttons = renderState.buttons;\n\n    let toolbar;\n\n    if (hiddenTabs.length > 0) {\n        const overflowTitle = layout.i18nName(I18nLabel.Overflow_Menu_Tooltip);\n        let overflowContent;\n        if (typeof icons.more === \"function\") {\n            overflowContent = icons.more(border, hiddenTabs);\n        } else {\n            overflowContent = (<>\n                {icons.more}\n                <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)}>{hiddenTabs.length}</div>\n            </>);\n        }\n        buttons.push(\n            <button\n                key=\"overflowbutton\"\n                ref={overflowbuttonRef}\n                className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_ + border.getLocation().getName())}\n                title={overflowTitle}\n                onClick={onOverflowClick}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {overflowContent}\n            </button>\n        );\n    }\n\n    const selectedIndex = border.getSelected();\n    if (selectedIndex !== -1) {\n        const selectedTabNode = border.getChildren()[selectedIndex] as TabNode;\n        if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n            const floatTitle = layout.i18nName(I18nLabel.Float_Tab);\n            buttons.push(\n                <button\n                    key=\"float\"\n                    title={floatTitle}\n                    className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT)}\n                    onClick={onFloatTab}\n                    onMouseDown={onInterceptMouseDown}\n                    onTouchStart={onInterceptMouseDown}\n                >\n                    {(typeof icons.popout === \"function\") ? icons.popout(selectedTabNode) : icons.popout}\n                </button>\n            );\n        }\n    }\n    toolbar = (\n        <div key=\"toolbar\" ref={toolbarRef} className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_ + border.getLocation().getName())}>\n            {buttons}\n        </div>\n    );\n\n    style = layout.styleFont(style);\n\n    let innerStyle = {};\n    const borderHeight = border.getBorderBarSize() - 1;\n    if (border.getLocation() === DockLocation.LEFT) {\n        innerStyle = { right: borderHeight, height: borderHeight, top: position };\n    } else if (border.getLocation() === DockLocation.RIGHT) {\n        innerStyle = { left: borderHeight, height: borderHeight, top: position };\n    } else {\n        innerStyle = { height: borderHeight, left: position };\n    }\n\n    return (\n        <div ref={selfRef} dir=\"ltr\" style={style} className={borderClasses}\n            data-layout-path={path}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onContextMenu={onContextMenu}\n            onWheel={onMouseWheel}>\n            <div style={{ height: borderHeight }} className={cm(CLASSES.FLEXLAYOUT__BORDER_INNER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_INNER_ + border.getLocation().getName())}>\n                <div style={innerStyle} className={cm(CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_ + border.getLocation().getName())}>\n                    {tabs}\n                </div>\n            </div>\n            {toolbar}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"script"}