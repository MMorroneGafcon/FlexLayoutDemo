{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAuxMouseEvent = exports.hideElement = exports.getRenderStateEx = void 0;\n\nvar React = require(\"react\");\n/** @internal */\n\n\nfunction getRenderStateEx(layout, node, iconFactory, titleFactory) {\n  var leadingContent = iconFactory ? iconFactory(node) : undefined;\n  var titleContent = node.getName();\n  var name = node.getName();\n\n  function isTitleObject(obj) {\n    return obj.titleContent !== undefined;\n  }\n\n  if (titleFactory !== undefined) {\n    var titleObj = titleFactory(node);\n\n    if (titleObj !== undefined) {\n      if (typeof titleObj === \"string\") {\n        titleContent = titleObj;\n        name = titleObj;\n      } else if (isTitleObject(titleObj)) {\n        titleContent = titleObj.titleContent;\n        name = titleObj.name;\n      } else {\n        titleContent = titleObj;\n      }\n    }\n  }\n\n  if (leadingContent === undefined && node.getIcon() !== undefined) {\n    leadingContent = React.createElement(\"img\", {\n      style: {\n        width: \"1em\",\n        height: \"1em\"\n      },\n      src: node.getIcon(),\n      alt: \"leadingContent\"\n    });\n  }\n\n  var buttons = []; // allow customization of leading contents (icon) and contents\n\n  var renderState = {\n    leading: leadingContent,\n    content: titleContent,\n    name: name,\n    buttons: buttons\n  };\n  layout.customizeTab(node, renderState);\n\n  node._setRenderedName(renderState.name);\n\n  return renderState;\n}\n\nexports.getRenderStateEx = getRenderStateEx;\n/** @internal */\n\nfunction hideElement(style, useVisibility) {\n  if (useVisibility) {\n    style.visibility = \"hidden\";\n  } else {\n    style.display = \"none\";\n  }\n}\n\nexports.hideElement = hideElement;\n/** @internal */\n\nfunction isAuxMouseEvent(event) {\n  var auxEvent = false;\n\n  if (event.nativeEvent instanceof MouseEvent) {\n    if (event.nativeEvent.button !== 0 || event.ctrlKey || event.altKey || event.metaKey || event.shiftKey) {\n      auxEvent = true;\n    }\n  }\n\n  return auxEvent;\n}\n\nexports.isAuxMouseEvent = isAuxMouseEvent;","map":{"version":3,"mappings":";;;;;;;AAAA;AAIA;;;AACA,SAAgBA,gBAAhB,CACIC,MADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,YAJJ,EAIiE;AAE7D,MAAIC,cAAc,GAAGF,WAAW,GAAGA,WAAW,CAACD,IAAD,CAAd,GAAuBI,SAAvD;AACA,MAAIC,YAAY,GAAoBL,IAAI,CAACM,OAAL,EAApC;AACA,MAAIC,IAAI,GAAGP,IAAI,CAACM,OAAL,EAAX;;AAEA,WAASE,aAAT,CAAuBC,GAAvB,EAA+B;AAC3B,WAAOA,GAAG,CAACJ,YAAJ,KAAqBD,SAA5B;AACH;;AAED,MAAIF,YAAY,KAAKE,SAArB,EAAgC;AAC5B,QAAMM,QAAQ,GAAGR,YAAY,CAACF,IAAD,CAA7B;;AACA,QAAIU,QAAQ,KAAKN,SAAjB,EAA4B;AACxB,UAAI,OAAOM,QAAP,KAAoB,QAAxB,EAAkC;AAC9BL,oBAAY,GAAGK,QAAf;AACAH,YAAI,GAAGG,QAAP;AACH,OAHD,MAGO,IAAIF,aAAa,CAACE,QAAD,CAAjB,EAA6B;AAChCL,oBAAY,GAAGK,QAAQ,CAACL,YAAxB;AACAE,YAAI,GAAGG,QAAQ,CAACH,IAAhB;AACH,OAHM,MAGA;AACHF,oBAAY,GAAGK,QAAf;AACH;AACJ;AACJ;;AAED,MAAIP,cAAc,KAAKC,SAAnB,IAAgCJ,IAAI,CAACW,OAAL,OAAmBP,SAAvD,EAAkE;AAC9DD,kBAAc,GAAGS;AAAKC,WAAK,EAAE;AAAEC,aAAK,EAAE,KAAT;AAAgBC,cAAM,EAAE;AAAxB,OAAZ;AAA6CC,SAAG,EAAEhB,IAAI,CAACW,OAAL,EAAlD;AAAkEM,SAAG,EAAC;AAAtE,MAAjB;AACH;;AAED,MAAIC,OAAO,GAAU,EAArB,CA7B6D,CA+B7D;;AACA,MAAMC,WAAW,GAAG;AAAEC,WAAO,EAAEjB,cAAX;AAA2BkB,WAAO,EAAEhB,YAApC;AAAkDE,QAAI,MAAtD;AAAwDW,WAAO;AAA/D,GAApB;AACAnB,QAAM,CAACuB,YAAP,CAAoBtB,IAApB,EAA0BmB,WAA1B;;AAEAnB,MAAI,CAACuB,gBAAL,CAAsBJ,WAAW,CAACZ,IAAlC;;AAEA,SAAOY,WAAP;AAEH;;AA3CDK;AA6CA;;AACA,SAAgBC,WAAhB,CAA4BZ,KAA5B,EAAwDa,aAAxD,EAAuF;AACnF,MAAIA,aAAJ,EAAmB;AACfb,SAAK,CAACc,UAAN,GAAmB,QAAnB;AACH,GAFD,MAEO;AACHd,SAAK,CAACe,OAAN,GAAgB,MAAhB;AACH;AACJ;;AANDJ;AASA;;AACA,SAAgBK,eAAhB,CAAgCC,KAAhC,EAAsH;AAClH,MAAIC,QAAQ,GAAG,KAAf;;AACA,MAAID,KAAK,CAACE,WAAN,YAA6BC,UAAjC,EAA6C;AACzC,QAAIH,KAAK,CAACE,WAAN,CAAkBE,MAAlB,KAA6B,CAA7B,IAAkCJ,KAAK,CAACK,OAAxC,IAAmDL,KAAK,CAACM,MAAzD,IAAmEN,KAAK,CAACO,OAAzE,IAAoFP,KAAK,CAACQ,QAA9F,EAAwG;AACpGP,cAAQ,GAAG,IAAX;AACH;AACJ;;AACD,SAAOA,QAAP;AACH;;AARDP","names":["getRenderStateEx","layout","node","iconFactory","titleFactory","leadingContent","undefined","titleContent","getName","name","isTitleObject","obj","titleObj","getIcon","React","style","width","height","src","alt","buttons","renderState","leading","content","customizeTab","_setRenderedName","exports","hideElement","useVisibility","visibility","display","isAuxMouseEvent","event","auxEvent","nativeEvent","MouseEvent","button","ctrlKey","altKey","metaKey","shiftKey"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\view\\Utils.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { TabNode } from \"../model/TabNode\";\nimport { ILayoutCallbacks, ITitleObject } from \"./Layout\";\n\n/** @internal */\nexport function getRenderStateEx(\n    layout: ILayoutCallbacks,\n    node: TabNode,\n    iconFactory?: (node: TabNode) => React.ReactNode | undefined,\n    titleFactory?: (node: TabNode) => React.ReactNode | undefined\n) {\n    let leadingContent = iconFactory ? iconFactory(node) : undefined;\n    let titleContent: React.ReactNode = node.getName();\n    let name = node.getName();\n\n    function isTitleObject(obj: any): obj is ITitleObject {\n        return obj.titleContent !== undefined\n    }\n\n    if (titleFactory !== undefined) {\n        const titleObj = titleFactory(node);\n        if (titleObj !== undefined) {\n            if (typeof titleObj === \"string\") {\n                titleContent = titleObj as string;\n                name = titleObj as string;\n            } else if (isTitleObject(titleObj)) {\n                titleContent = titleObj.titleContent;\n                name = titleObj.name;\n            } else {\n                titleContent = titleObj;\n            }\n        }\n    }\n\n    if (leadingContent === undefined && node.getIcon() !== undefined) {\n        leadingContent = <img style={{ width: \"1em\", height: \"1em\" }} src={node.getIcon()} alt=\"leadingContent\" />;\n    }\n\n    let buttons: any[] = [];\n\n    // allow customization of leading contents (icon) and contents\n    const renderState = { leading: leadingContent, content: titleContent, name, buttons };\n    layout.customizeTab(node, renderState);\n\n    node._setRenderedName(renderState.name);\n\n    return renderState;\n\n}\n\n/** @internal */\nexport function hideElement(style: Record<string, any>, useVisibility: ConstrainBoolean) {\n    if (useVisibility) {\n        style.visibility = \"hidden\";\n    } else {\n        style.display = \"none\";\n    }\n}\n\n\n/** @internal */\nexport function isAuxMouseEvent(event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) {\n    let auxEvent = false;\n    if (event.nativeEvent instanceof MouseEvent) {\n        if (event.nativeEvent.button !== 0 || event.ctrlKey || event.altKey || event.metaKey || event.shiftKey) {\n            auxEvent = true;\n        }\n    }\n    return auxEvent;\n}\n\n"]},"metadata":{},"sourceType":"script"}