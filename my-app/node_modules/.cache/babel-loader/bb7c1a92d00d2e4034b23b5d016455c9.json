{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AttributeDefinitions = void 0;\n\nvar Attribute_1 = require(\"./Attribute\");\n/** @internal */\n\n\nvar AttributeDefinitions =\n/** @class */\nfunction () {\n  function AttributeDefinitions() {\n    this.attributes = [];\n    this.nameToAttribute = {};\n  }\n\n  AttributeDefinitions.prototype.addWithAll = function (name, modelName, defaultValue, alwaysWriteJson) {\n    var attr = new Attribute_1.Attribute(name, modelName, defaultValue, alwaysWriteJson);\n    this.attributes.push(attr);\n    this.nameToAttribute[name] = attr;\n    return attr;\n  };\n\n  AttributeDefinitions.prototype.addInherited = function (name, modelName) {\n    return this.addWithAll(name, modelName, undefined, false);\n  };\n\n  AttributeDefinitions.prototype.add = function (name, defaultValue, alwaysWriteJson) {\n    return this.addWithAll(name, undefined, defaultValue, alwaysWriteJson);\n  };\n\n  AttributeDefinitions.prototype.getAttributes = function () {\n    return this.attributes;\n  };\n\n  AttributeDefinitions.prototype.getModelName = function (name) {\n    var conversion = this.nameToAttribute[name];\n\n    if (conversion !== undefined) {\n      return conversion.modelName;\n    }\n\n    return undefined;\n  };\n\n  AttributeDefinitions.prototype.toJson = function (jsonObj, obj) {\n    for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n      var attr = _a[_i];\n      var fromValue = obj[attr.name];\n\n      if (attr.alwaysWriteJson || fromValue !== attr.defaultValue) {\n        jsonObj[attr.name] = fromValue;\n      }\n    }\n  };\n\n  AttributeDefinitions.prototype.fromJson = function (jsonObj, obj) {\n    for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n      var attr = _a[_i];\n      var fromValue = jsonObj[attr.name];\n\n      if (fromValue === undefined) {\n        obj[attr.name] = attr.defaultValue;\n      } else {\n        obj[attr.name] = fromValue;\n      }\n    }\n  };\n\n  AttributeDefinitions.prototype.update = function (jsonObj, obj) {\n    for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n      var attr = _a[_i];\n\n      if (jsonObj.hasOwnProperty(attr.name)) {\n        var fromValue = jsonObj[attr.name];\n\n        if (fromValue === undefined) {\n          delete obj[attr.name];\n        } else {\n          obj[attr.name] = fromValue;\n        }\n      }\n    }\n  };\n\n  AttributeDefinitions.prototype.setDefaults = function (obj) {\n    for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n      var attr = _a[_i];\n      obj[attr.name] = attr.defaultValue;\n    }\n  };\n\n  AttributeDefinitions.prototype.toTypescriptInterface = function (name, parentAttributes) {\n    var lines = [];\n    var sorted = this.attributes.sort(function (a, b) {\n      return a.name.localeCompare(b.name);\n    }); // const sorted = this.attributes;\n\n    lines.push(\"export interface I\" + name + \"Attributes {\");\n\n    for (var i = 0; i < sorted.length; i++) {\n      var c = sorted[i];\n      var type = c.type;\n      var defaultValue = undefined;\n      var attr = c;\n      var inherited = undefined;\n\n      if (attr.defaultValue !== undefined) {\n        defaultValue = attr.defaultValue;\n      } else if (attr.modelName !== undefined && parentAttributes !== undefined && parentAttributes.nameToAttribute[attr.modelName] !== undefined) {\n        inherited = attr.modelName;\n        attr = parentAttributes.nameToAttribute[attr.modelName];\n        defaultValue = attr.defaultValue;\n        type = attr.type;\n      }\n\n      var defValue = JSON.stringify(defaultValue);\n      var required = attr.required || attr.fixed ? \"\" : \"?\";\n\n      if (c.fixed) {\n        lines.push(\"\\t\" + c.name + \": \" + defValue + \";\");\n      } else {\n        var comment = (defaultValue !== undefined ? \"default: \" + defValue : \"\") + (inherited !== undefined ? \" - inherited from global \" + inherited : \"\");\n        lines.push(\"\\t\" + c.name + required + \": \" + type + \";\" + (comment.length > 0 ? \" // \" + comment : \"\"));\n      }\n    }\n\n    lines.push(\"}\");\n    return lines.join(\"\\n\");\n  };\n\n  return AttributeDefinitions;\n}();\n\nexports.AttributeDefinitions = AttributeDefinitions;","map":{"version":3,"mappings":"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","names":["attributes","nameToAttribute","AttributeDefinitions","name","modelName","defaultValue","alwaysWriteJson","attr","Attribute_1","push","addWithAll","undefined","conversion","jsonObj","obj","_i","fromValue","hasOwnProperty","parentAttributes","lines","sorted","sort","a","b","localeCompare","i","length","c","type","inherited","defValue","JSON","stringify","required","fixed","comment","join","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\AttributeDefinitions.ts"],"sourcesContent":["import { Attribute } from \"./Attribute\";\n\n/** @internal */\nexport class AttributeDefinitions {\n    attributes: Attribute[];\n    nameToAttribute: Record<string, Attribute>;\n\n    constructor() {\n        this.attributes = [];\n        this.nameToAttribute = {};\n    }\n\n    addWithAll(name: string, modelName: string | undefined, defaultValue: any, alwaysWriteJson?: boolean) {\n        const attr = new Attribute(name, modelName, defaultValue, alwaysWriteJson);\n        this.attributes.push(attr);\n        this.nameToAttribute[name] = attr;\n        return attr;\n    }\n\n    addInherited(name: string, modelName: string) {\n        return this.addWithAll(name, modelName, undefined, false);\n    }\n\n    add(name: string, defaultValue: any, alwaysWriteJson?: boolean) {\n        return this.addWithAll(name, undefined, defaultValue, alwaysWriteJson);\n    }\n\n    getAttributes() {\n        return this.attributes;\n    }\n\n    getModelName(name: string) {\n        const conversion = this.nameToAttribute[name];\n        if (conversion !== undefined) {\n            return conversion.modelName;\n        }\n        return undefined;\n    }\n\n    toJson(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            const fromValue = obj[attr.name];\n            if (attr.alwaysWriteJson || fromValue !== attr.defaultValue) {\n                jsonObj[attr.name] = fromValue;\n            }\n        }\n    }\n\n    fromJson(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            const fromValue = jsonObj[attr.name];\n            if (fromValue === undefined) {\n                obj[attr.name] = attr.defaultValue;\n            } else {\n                obj[attr.name] = fromValue;\n            }\n        }\n    }\n\n    update(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            if (jsonObj.hasOwnProperty(attr.name)) {\n                const fromValue = jsonObj[attr.name];\n                if (fromValue === undefined) {\n                    delete obj[attr.name];\n                } else {\n                    obj[attr.name] = fromValue;\n                }\n            }\n        }\n    }\n\n    setDefaults(obj: any) {\n        for (const attr of this.attributes) {\n            obj[attr.name] = attr.defaultValue;\n        }\n    }\n\n    toTypescriptInterface(name: string, parentAttributes: AttributeDefinitions | undefined) {\n        const lines = [];\n        const sorted = this.attributes.sort((a, b) => a.name.localeCompare(b.name));\n        // const sorted = this.attributes;\n        lines.push(\"export interface I\" + name + \"Attributes {\");\n        for (let i = 0; i < sorted.length; i++) {\n            const c = sorted[i];\n            let type = c.type;\n            let defaultValue = undefined;\n\n            let attr = c;\n            let inherited = undefined;\n            if (attr.defaultValue !== undefined) {\n                defaultValue = attr.defaultValue;\n            } else if (attr.modelName !== undefined\n                && parentAttributes !== undefined\n                && parentAttributes.nameToAttribute[attr.modelName] !== undefined) {\n                inherited = attr.modelName;\n                attr = parentAttributes.nameToAttribute[attr.modelName];\n                defaultValue = attr.defaultValue;\n                type = attr.type;\n            }\n\n            let defValue = JSON.stringify(defaultValue);\n\n            const required = attr.required || attr.fixed ? \"\" : \"?\";\n\n            if (c.fixed) {\n                lines.push(\"\\t\" + c.name + \": \" + defValue + \";\");\n            } else {\n                const comment = (defaultValue !== undefined ? \"default: \" + defValue : \"\") +\n                    (inherited !== undefined ? \" - inherited from global \" + inherited : \"\");\n\n                lines.push(\"\\t\" + c.name + required + \": \" + type + \";\" +\n                    (comment.length > 0 ? \" // \" + comment : \"\")\n                );\n            }\n        }\n        lines.push(\"}\");\n\n        return lines.join(\"\\n\");\n    }\n}\n"]},"metadata":{},"sourceType":"script"}