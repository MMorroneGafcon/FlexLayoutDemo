{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmorrone\\\\UnityProjects\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport * as FlexLayout from \"flexlayout-react\";\nimport 'flexlayout-react/style/light.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.json = {\n      global: {},\n      borders: [],\n      layout: {\n        type: \"row\",\n        weight: 100,\n        children: [{\n          type: \"tabset\",\n          weight: 50,\n          children: [{\n            type: \"tab\",\n            name: \"One\",\n            component: \"button\"\n          }]\n        }, {\n          type: \"tabset\",\n          weight: 50,\n          children: [{\n            type: \"tab\",\n            name: \"Two\",\n            component: \"button\"\n          }]\n        }]\n      }\n    };\n\n    this.factory = node => {\n      var component = node.getComponent();\n\n      if (component === \"button\") {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          children: node.getName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.state = {\n      model: FlexLayout.Model.fromJson(this.json)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(FlexLayout.Layout, {\n        model: this.state.model,\n        factory: this.factory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mmorrone/UnityProjects/my-app/src/App.js"],"names":["logo","Component","FlexLayout","App","constructor","props","json","global","borders","layout","type","weight","children","name","component","factory","node","getComponent","getName","state","model","Model","fromJson","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,kCAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CACA;AAYAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAXnBC,IAWmB,GAXZ;AAAEC,MAAAA,MAAM,EAAE,EAAV;AACPC,MAAAA,OAAO,EAAE,EADF;AAEPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,MAAM,EAAE,GAAvB;AAA4BC,QAAAA,QAAQ,EAAE,CAAC;AAAEF,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,MAAM,EAAE,EAA1B;AAA8BC,UAAAA,QAAQ,EAAE,CAAC;AAAEF,YAAAA,IAAI,EAAE,KAAR;AAAeG,YAAAA,IAAI,EAAE,KAArB;AAA4BC,YAAAA,SAAS,EAAE;AAAvC,WAAD;AAAxC,SAAD,EAAiG;AAAEJ,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,MAAM,EAAE,EAA1B;AAA8BC,UAAAA,QAAQ,EAAE,CAAC;AAAEF,YAAAA,IAAI,EAAE,KAAR;AAAeG,YAAAA,IAAI,EAAE,KAArB;AAA4BC,YAAAA,SAAS,EAAE;AAAvC,WAAD;AAAxC,SAAjG;AAAtC;AAFD,KAWY;;AAAA,SANnBC,OAMmB,GANRC,IAAD,IAAU;AAClB,UAAIF,SAAS,GAAGE,IAAI,CAACC,YAAL,EAAhB;;AACA,UAAIH,SAAS,KAAK,QAAlB,EAA4B;AACxB,4BAAO;AAAA,oBAASE,IAAI,CAACE,OAAL;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACF,KACkB;;AAEjB,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAElB,UAAU,CAACmB,KAAX,CAAiBC,QAAjB,CAA0B,KAAKhB,IAA/B;AAAR,KAAb;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACG,QAAC,UAAD,CAAY,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAArC;AAA4C,QAAA,OAAO,EAAE,KAAKL;AAA1D;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAvBD;;AAyBA,eAAeZ,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport * as FlexLayout from \"flexlayout-react\";\nimport 'flexlayout-react/style/light.css';\n\nclass App extends Component\n{\njson = { global: {}, \nborders: [], \nlayout: { type: \"row\", weight: 100, children: [{ type: \"tabset\", weight: 50, children: [{ type: \"tab\", name: \"One\", component: \"button\", }] }, { type: \"tabset\", weight: 50, children: [{ type: \"tab\", name: \"Two\", component: \"button\", }] }] } }\n\n\nfactory = (node) => {\n  var component = node.getComponent();\n  if (component === \"button\") {\n      return <button>{node.getName()}</button>;\n  }\n}\nconstructor(props) {\n  super(props);\n  this.state = {model: FlexLayout.Model.fromJson(this.json)};\n}\n\nrender() {\n  return (\n    <div className=\"App\">\n      {<FlexLayout.Layout model={this.state.model} factory={this.factory}/>}\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}