{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabSet = void 0;\n\nvar React = require(\"react\");\n\nvar I18nLabel_1 = require(\"../I18nLabel\");\n\nvar Actions_1 = require(\"../model/Actions\");\n\nvar PopupMenu_1 = require(\"../PopupMenu\");\n\nvar TabButton_1 = require(\"./TabButton\");\n\nvar TabOverflowHook_1 = require(\"./TabOverflowHook\");\n\nvar Orientation_1 = require(\"../Orientation\");\n\nvar Types_1 = require(\"../Types\");\n\nvar Utils_1 = require(\"./Utils\");\n/** @internal */\n\n\nvar TabSet = function (props) {\n  var node = props.node,\n      layout = props.layout,\n      iconFactory = props.iconFactory,\n      titleFactory = props.titleFactory,\n      icons = props.icons,\n      path = props.path;\n  var toolbarRef = React.useRef(null);\n  var overflowbuttonRef = React.useRef(null);\n  var tabbarInnerRef = React.useRef(null);\n  var stickyButtonsRef = React.useRef(null);\n\n  var _a = (0, TabOverflowHook_1.useTabOverflow)(node, Orientation_1.Orientation.HORZ, toolbarRef, stickyButtonsRef),\n      selfRef = _a.selfRef,\n      position = _a.position,\n      userControlledLeft = _a.userControlledLeft,\n      hiddenTabs = _a.hiddenTabs,\n      onMouseWheel = _a.onMouseWheel,\n      tabsTruncated = _a.tabsTruncated;\n\n  var onOverflowClick = function (event) {\n    var callback = layout.getShowOverflowMenu();\n\n    if (callback !== undefined) {\n      callback(node, event, hiddenTabs, onOverflowItemSelect);\n    } else {\n      var element = overflowbuttonRef.current;\n      (0, PopupMenu_1.showPopup)(element, hiddenTabs, onOverflowItemSelect, layout, iconFactory, titleFactory);\n    }\n\n    event.stopPropagation();\n  };\n\n  var onOverflowItemSelect = function (item) {\n    layout.doAction(Actions_1.Actions.selectTab(item.node.getId()));\n    userControlledLeft.current = false;\n  };\n\n  var onMouseDown = function (event) {\n    if (!(0, Utils_1.isAuxMouseEvent)(event)) {\n      var name_1 = node.getName();\n\n      if (name_1 === undefined) {\n        name_1 = \"\";\n      } else {\n        name_1 = \": \" + name_1;\n      }\n\n      layout.doAction(Actions_1.Actions.setActiveTabset(node.getId()));\n\n      if (!layout.getEditingTab()) {\n        var message = layout.i18nName(I18nLabel_1.I18nLabel.Move_Tabset, name_1);\n        layout.dragStart(event, message, node, node.isEnableDrag(), function (event2) {\n          return undefined;\n        }, onDoubleClick);\n      }\n    }\n  };\n\n  var onAuxMouseClick = function (event) {\n    if ((0, Utils_1.isAuxMouseEvent)(event)) {\n      layout.auxMouseClick(node, event);\n    }\n  };\n\n  var onContextMenu = function (event) {\n    layout.showContextMenu(node, event);\n  };\n\n  var onInterceptMouseDown = function (event) {\n    event.stopPropagation();\n  };\n\n  var onMaximizeToggle = function (event) {\n    if (node.canMaximize()) {\n      layout.maximize(node);\n    }\n\n    event.stopPropagation();\n  };\n\n  var onClose = function (event) {\n    layout.doAction(Actions_1.Actions.deleteTabset(node.getId()));\n    event.stopPropagation();\n  };\n\n  var onFloatTab = function (event) {\n    if (selectedTabNode !== undefined) {\n      layout.doAction(Actions_1.Actions.floatTab(selectedTabNode.getId()));\n    }\n\n    event.stopPropagation();\n  };\n\n  var onDoubleClick = function (event) {\n    if (node.canMaximize()) {\n      layout.maximize(node);\n    }\n  }; // Start Render\n\n\n  var cm = layout.getClassName; // tabbar inner can get shifted left via tab rename, this resets scrollleft to 0\n\n  if (tabbarInnerRef.current !== null && tabbarInnerRef.current.scrollLeft !== 0) {\n    tabbarInnerRef.current.scrollLeft = 0;\n  }\n\n  var selectedTabNode = node.getSelectedNode();\n\n  var style = node._styleWithPosition();\n\n  if (node.getModel().getMaximizedTabset() !== undefined && !node.isMaximized()) {\n    (0, Utils_1.hideElement)(style, node.getModel().isUseVisibility());\n  }\n\n  var tabs = [];\n\n  if (node.isEnableTabStrip()) {\n    for (var i = 0; i < node.getChildren().length; i++) {\n      var child = node.getChildren()[i];\n      var isSelected = node.getSelected() === i;\n      tabs.push(React.createElement(TabButton_1.TabButton, {\n        layout: layout,\n        node: child,\n        path: path + \"/tb\" + i,\n        key: child.getId(),\n        selected: isSelected,\n        iconFactory: iconFactory,\n        titleFactory: titleFactory,\n        icons: icons\n      }));\n      tabs.push(React.createElement(\"div\", {\n        key: \"divider\" + i,\n        className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TAB_DIVIDER)\n      }));\n    }\n  }\n\n  var showHeader = node.getName() !== undefined;\n  var stickyButtons = [];\n  var buttons = [];\n  var headerButtons = []; // allow customization of header contents and buttons\n\n  var renderState = {\n    headerContent: node.getName(),\n    stickyButtons: stickyButtons,\n    buttons: buttons,\n    headerButtons: headerButtons\n  };\n  layout.customizeTabSet(node, renderState);\n  var headerContent = renderState.headerContent;\n  stickyButtons = renderState.stickyButtons;\n  buttons = renderState.buttons;\n  headerButtons = renderState.headerButtons;\n\n  if (stickyButtons.length > 0) {\n    if (tabsTruncated) {\n      buttons = __spreadArray(__spreadArray([], stickyButtons, true), buttons, true);\n    } else {\n      tabs.push(React.createElement(\"div\", {\n        ref: stickyButtonsRef,\n        key: \"sticky_buttons_container\",\n        onMouseDown: onInterceptMouseDown,\n        onTouchStart: onInterceptMouseDown,\n        onDragStart: function (e) {\n          e.preventDefault();\n        },\n        className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER)\n      }, stickyButtons));\n    }\n  }\n\n  var toolbar;\n\n  if (hiddenTabs.length > 0) {\n    var overflowTitle = layout.i18nName(I18nLabel_1.I18nLabel.Overflow_Menu_Tooltip);\n    var overflowContent = void 0;\n\n    if (typeof icons.more === \"function\") {\n      overflowContent = icons.more(node, hiddenTabs);\n    } else {\n      overflowContent = React.createElement(React.Fragment, null, icons.more, React.createElement(\"div\", {\n        className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)\n      }, hiddenTabs.length));\n    }\n\n    buttons.push(React.createElement(\"button\", {\n      key: \"overflowbutton\",\n      \"data-layout-path\": path + \"/button/overflow\",\n      ref: overflowbuttonRef,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW),\n      title: overflowTitle,\n      onClick: onOverflowClick,\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown\n    }, overflowContent));\n  }\n\n  if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n    var floatTitle = layout.i18nName(I18nLabel_1.I18nLabel.Float_Tab);\n    buttons.push(React.createElement(\"button\", {\n      key: \"float\",\n      \"data-layout-path\": path + \"/button/float\",\n      title: floatTitle,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT),\n      onClick: onFloatTab,\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown\n    }, typeof icons.popout === \"function\" ? icons.popout(selectedTabNode) : icons.popout));\n  }\n\n  if (node.canMaximize()) {\n    var minTitle = layout.i18nName(I18nLabel_1.I18nLabel.Restore);\n    var maxTitle = layout.i18nName(I18nLabel_1.I18nLabel.Maximize);\n    var btns = showHeader ? headerButtons : buttons;\n    btns.push(React.createElement(\"button\", {\n      key: \"max\",\n      \"data-layout-path\": path + \"/button/max\",\n      title: node.isMaximized() ? minTitle : maxTitle,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_ + (node.isMaximized() ? \"max\" : \"min\")),\n      onClick: onMaximizeToggle,\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown\n    }, node.isMaximized() ? typeof icons.restore === \"function\" ? icons.restore(node) : icons.restore : typeof icons.maximize === \"function\" ? icons.maximize(node) : icons.maximize));\n  }\n\n  if (!node.isMaximized() && node.isEnableClose()) {\n    var title = layout.i18nName(I18nLabel_1.I18nLabel.Close_Tabset);\n    var btns = showHeader ? headerButtons : buttons;\n    btns.push(React.createElement(\"button\", {\n      key: \"close\",\n      \"data-layout-path\": path + \"/button/close\",\n      title: title,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE),\n      onClick: onClose,\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown\n    }, typeof icons.closeTabset === \"function\" ? icons.closeTabset(node) : icons.closeTabset));\n  }\n\n  toolbar = React.createElement(\"div\", {\n    key: \"toolbar\",\n    ref: toolbarRef,\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR),\n    onMouseDown: onInterceptMouseDown,\n    onTouchStart: onInterceptMouseDown,\n    onDragStart: function (e) {\n      e.preventDefault();\n    }\n  }, buttons);\n  var header;\n  var tabStrip;\n  var tabStripClasses = cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER);\n\n  if (node.getClassNameTabStrip() !== undefined) {\n    tabStripClasses += \" \" + node.getClassNameTabStrip();\n  }\n\n  tabStripClasses += \" \" + Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER_ + node.getTabLocation();\n\n  if (node.isActive() && !showHeader) {\n    tabStripClasses += \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n  }\n\n  if (node.isMaximized() && !showHeader) {\n    tabStripClasses += \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n  }\n\n  if (showHeader) {\n    var headerToolbar = React.createElement(\"div\", {\n      key: \"toolbar\",\n      ref: toolbarRef,\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TAB_TOOLBAR),\n      onMouseDown: onInterceptMouseDown,\n      onTouchStart: onInterceptMouseDown,\n      onDragStart: function (e) {\n        e.preventDefault();\n      }\n    }, headerButtons);\n    var tabHeaderClasses = cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_HEADER);\n\n    if (node.isActive()) {\n      tabHeaderClasses += \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n    }\n\n    if (node.isMaximized()) {\n      tabHeaderClasses += \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n    }\n\n    if (node.getClassNameHeader() !== undefined) {\n      tabHeaderClasses += \" \" + node.getClassNameHeader();\n    }\n\n    header = React.createElement(\"div\", {\n      className: tabHeaderClasses,\n      style: {\n        height: node.getHeaderHeight() + \"px\"\n      },\n      \"data-layout-path\": path + \"/header\",\n      onMouseDown: onMouseDown,\n      onContextMenu: onContextMenu,\n      onClick: onAuxMouseClick,\n      onAuxClick: onAuxMouseClick,\n      onTouchStart: onMouseDown\n    }, React.createElement(\"div\", {\n      className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_HEADER_CONTENT)\n    }, headerContent), headerToolbar);\n  }\n\n  var tabStripStyle = {\n    height: node.getTabStripHeight() + \"px\"\n  };\n  tabStrip = React.createElement(\"div\", {\n    className: tabStripClasses,\n    style: tabStripStyle,\n    \"data-layout-path\": path + \"/tabstrip\",\n    onMouseDown: onMouseDown,\n    onContextMenu: onContextMenu,\n    onClick: onAuxMouseClick,\n    onAuxClick: onAuxMouseClick,\n    onTouchStart: onMouseDown\n  }, React.createElement(\"div\", {\n    ref: tabbarInnerRef,\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_ + node.getTabLocation())\n  }, React.createElement(\"div\", {\n    style: {\n      left: position\n    },\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER) + \" \" + cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_ + node.getTabLocation())\n  }, tabs)), toolbar);\n  style = layout.styleFont(style);\n  var placeHolder = undefined;\n\n  if (node.getChildren().length === 0) {\n    var placeHolderCallback = layout.getTabSetPlaceHolderCallback();\n\n    if (placeHolderCallback) {\n      placeHolder = placeHolderCallback(node);\n    }\n  }\n\n  var center = React.createElement(\"div\", {\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET_CONTENT)\n  }, placeHolder);\n  var content;\n\n  if (node.getTabLocation() === \"top\") {\n    content = React.createElement(React.Fragment, null, header, tabStrip, center);\n  } else {\n    content = React.createElement(React.Fragment, null, header, center, tabStrip);\n  }\n\n  return React.createElement(\"div\", {\n    ref: selfRef,\n    dir: \"ltr\",\n    \"data-layout-path\": path,\n    style: style,\n    className: cm(Types_1.CLASSES.FLEXLAYOUT__TABSET),\n    onWheel: onMouseWheel\n  }, content);\n};\n\nexports.TabSet = TabSet;","map":{"version":3,"mappings":"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","names":["TabSet","props","layout","iconFactory","titleFactory","icons","path","toolbarRef","React","useRef","overflowbuttonRef","tabbarInnerRef","stickyButtonsRef","node","Orientation_1","HORZ","selfRef","position","userControlledLeft","hiddenTabs","onMouseWheel","tabsTruncated","onOverflowClick","event","callback","getShowOverflowMenu","undefined","onOverflowItemSelect","element","current","stopPropagation","item","doAction","Actions_1","selectTab","getId","onMouseDown","name_1","getName","setActiveTabset","getEditingTab","message","i18nName","I18nLabel_1","Move_Tabset","dragStart","isEnableDrag","event2","onDoubleClick","onAuxMouseClick","auxMouseClick","onContextMenu","showContextMenu","onInterceptMouseDown","onMaximizeToggle","canMaximize","maximize","onClose","deleteTabset","onFloatTab","selectedTabNode","floatTab","cm","getClassName","scrollLeft","getSelectedNode","style","_styleWithPosition","getModel","getMaximizedTabset","isMaximized","isUseVisibility","tabs","isEnableTabStrip","i","getChildren","length","child","isSelected","getSelected","push","TabButton_1","key","selected","className","Types_1","FLEXLAYOUT__TABSET_TAB_DIVIDER","showHeader","stickyButtons","buttons","headerButtons","renderState","headerContent","customizeTabSet","ref","onTouchStart","onDragStart","e","preventDefault","FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER","toolbar","overflowTitle","Overflow_Menu_Tooltip","overflowContent","more","FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT","FLEXLAYOUT__TAB_TOOLBAR_BUTTON","FLEXLAYOUT__TAB_BUTTON_OVERFLOW","title","onClick","isSupportsPopout","isEnableFloat","isFloating","floatTitle","Float_Tab","FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT","popout","minTitle","Restore","maxTitle","Maximize","btns","FLEXLAYOUT__TAB_TOOLBAR_BUTTON_","restore","isEnableClose","Close_Tabset","FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE","closeTabset","FLEXLAYOUT__TAB_TOOLBAR","header","tabStrip","tabStripClasses","FLEXLAYOUT__TABSET_TABBAR_OUTER","getClassNameTabStrip","FLEXLAYOUT__TABSET_TABBAR_OUTER_","getTabLocation","isActive","FLEXLAYOUT__TABSET_SELECTED","FLEXLAYOUT__TABSET_MAXIMIZED","headerToolbar","tabHeaderClasses","FLEXLAYOUT__TABSET_HEADER","getClassNameHeader","height","getHeaderHeight","onAuxClick","FLEXLAYOUT__TABSET_HEADER_CONTENT","tabStripStyle","getTabStripHeight","FLEXLAYOUT__TABSET_TABBAR_INNER","FLEXLAYOUT__TABSET_TABBAR_INNER_","left","FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER","FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_","styleFont","placeHolder","placeHolderCallback","getTabSetPlaceHolderCallback","center","FLEXLAYOUT__TABSET_CONTENT","content","dir","FLEXLAYOUT__TABSET","onWheel","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\view\\TabSet.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { showPopup } from \"../PopupMenu\";\nimport { IIcons, ILayoutCallbacks } from \"./Layout\";\nimport { TabButton } from \"./TabButton\";\nimport { useTabOverflow } from \"./TabOverflowHook\";\nimport { Orientation } from \"../Orientation\";\nimport { CLASSES } from \"../Types\";\nimport { hideElement, isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface ITabSetProps {\n    layout: ILayoutCallbacks;\n    node: TabSetNode;\n    iconFactory?: (node: TabNode) => React.ReactNode | undefined;\n    titleFactory?: (node: TabNode) => React.ReactNode | undefined;\n    icons: IIcons;\n    editingTab?: TabNode;\n    path?: string;\n}\n\n/** @internal */\nexport const TabSet = (props: ITabSetProps) => {\n    const { node, layout, iconFactory, titleFactory, icons, path } = props;\n\n    const toolbarRef = React.useRef<HTMLDivElement | null>(null);\n    const overflowbuttonRef = React.useRef<HTMLButtonElement | null>(null);\n    const tabbarInnerRef = React.useRef<HTMLDivElement | null>(null);\n    const stickyButtonsRef = React.useRef<HTMLDivElement | null>(null);\n\n    const { selfRef, position, userControlledLeft, hiddenTabs, onMouseWheel, tabsTruncated } = useTabOverflow(node, Orientation.HORZ, toolbarRef, stickyButtonsRef);\n\n    const onOverflowClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const callback = layout.getShowOverflowMenu();\n        if (callback !== undefined) {\n            callback(node, event, hiddenTabs, onOverflowItemSelect);\n        } else {\n            const element = overflowbuttonRef.current!;\n            showPopup(\n                element,\n                hiddenTabs,\n                onOverflowItemSelect,\n                layout,\n                iconFactory,\n                titleFactory,\n            );\n        }\n        event.stopPropagation();\n    };\n\n    const onOverflowItemSelect = (item: { node: TabNode; index: number }) => {\n        layout.doAction(Actions.selectTab(item.node.getId()));\n        userControlledLeft.current = false;\n    };\n\n    const onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) => {\n        if (!isAuxMouseEvent(event)) {\n            let name = node.getName();\n            if (name === undefined) {\n                name = \"\";\n            } else {\n                name = \": \" + name;\n            }\n            layout.doAction(Actions.setActiveTabset(node.getId()));\n            if (!layout.getEditingTab()) {\n                const message = layout.i18nName(I18nLabel.Move_Tabset, name);\n                layout.dragStart(event, message, node, node.isEnableDrag(), (event2: Event) => undefined, onDoubleClick);\n            }\n        }\n    };\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(node, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(node, event);\n    };\n\n    const onInterceptMouseDown = (event: React.MouseEvent | React.TouchEvent) => {\n        event.stopPropagation();\n    };\n\n    const onMaximizeToggle = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (node.canMaximize()) {\n            layout.maximize(node);\n        }\n        event.stopPropagation();\n    };\n\n    const onClose = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        layout.doAction(Actions.deleteTabset(node.getId()));\n        event.stopPropagation();\n    };\n\n    const onFloatTab = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (selectedTabNode !== undefined) {\n            layout.doAction(Actions.floatTab(selectedTabNode.getId()));\n        }\n        event.stopPropagation();\n    };\n\n    const onDoubleClick = (event: Event) => {\n        if (node.canMaximize()) {\n            layout.maximize(node);\n        }\n    };\n\n    // Start Render\n    const cm = layout.getClassName;\n\n    // tabbar inner can get shifted left via tab rename, this resets scrollleft to 0\n    if (tabbarInnerRef.current !== null && tabbarInnerRef.current!.scrollLeft !== 0) {\n        tabbarInnerRef.current.scrollLeft = 0;\n    }\n\n    const selectedTabNode: TabNode = node.getSelectedNode() as TabNode;\n    let style = node._styleWithPosition();\n\n    if (node.getModel().getMaximizedTabset() !== undefined && !node.isMaximized()) {\n        hideElement(style, node.getModel().isUseVisibility())\n    }\n\n    const tabs = [];\n    if (node.isEnableTabStrip()) {\n        for (let i = 0; i < node.getChildren().length; i++) {\n            const child = node.getChildren()[i] as TabNode;\n            let isSelected = node.getSelected() === i;\n            tabs.push(\n                <TabButton\n                    layout={layout}\n                    node={child}\n                    path={path + \"/tb\" + i}\n                    key={child.getId()}\n                    selected={isSelected}\n                    iconFactory={iconFactory}\n                    titleFactory={titleFactory}\n                    icons={icons}\n                />);\n                tabs.push(\n                    <div  key={\"divider\" + i} className={cm(CLASSES.FLEXLAYOUT__TABSET_TAB_DIVIDER)}></div>\n                );\n        }\n    }\n\n    const showHeader = node.getName() !== undefined;\n    let stickyButtons: React.ReactNode[] = [];\n    let buttons: React.ReactNode[] = [];\n    let headerButtons: React.ReactNode[] = [];\n\n    // allow customization of header contents and buttons\n    const renderState = { headerContent: node.getName(), stickyButtons, buttons, headerButtons };\n    layout.customizeTabSet(node, renderState);\n    const headerContent = renderState.headerContent;\n    stickyButtons = renderState.stickyButtons;\n    buttons = renderState.buttons;\n    headerButtons = renderState.headerButtons;\n\n    if (stickyButtons.length > 0) {\n        if (tabsTruncated) {\n            buttons = [...stickyButtons, ...buttons];\n        } else {\n            tabs.push(<div\n                ref={stickyButtonsRef}\n                key=\"sticky_buttons_container\"\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n                onDragStart={(e) => { e.preventDefault() }}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER)}\n            >\n                {stickyButtons}\n            </div>);\n        }\n    }\n\n    let toolbar;\n    if (hiddenTabs.length > 0) {\n        const overflowTitle = layout.i18nName(I18nLabel.Overflow_Menu_Tooltip);\n        let overflowContent;\n        if (typeof icons.more === \"function\") {\n            overflowContent = icons.more(node, hiddenTabs);\n        } else {\n            overflowContent = (<>\n                {icons.more}\n                <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)}>{hiddenTabs.length}</div>\n            </>);\n        }\n        buttons.push(\n            <button\n                key=\"overflowbutton\"\n                data-layout-path={path + \"/button/overflow\"}\n\n                ref={overflowbuttonRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW)}\n                title={overflowTitle}\n                onClick={onOverflowClick}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {overflowContent}\n            </button>\n        );\n    }\n\n    if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n        const floatTitle = layout.i18nName(I18nLabel.Float_Tab);\n        buttons.push(\n            <button\n                key=\"float\"\n                data-layout-path={path + \"/button/float\"}\n                title={floatTitle}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT)}\n                onClick={onFloatTab}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {(typeof icons.popout === \"function\") ? icons.popout(selectedTabNode) : icons.popout}\n            </button>\n        );\n    }\n    if (node.canMaximize()) {\n        const minTitle = layout.i18nName(I18nLabel.Restore);\n        const maxTitle = layout.i18nName(I18nLabel.Maximize);\n        const btns = showHeader ? headerButtons : buttons;\n        btns.push(\n            <button\n                key=\"max\"\n                data-layout-path={path + \"/button/max\"}\n                title={node.isMaximized() ? minTitle : maxTitle}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_ + (node.isMaximized() ? \"max\" : \"min\"))}\n                onClick={onMaximizeToggle}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {node.isMaximized() ?\n                    (typeof icons.restore === \"function\") ? icons.restore(node) : icons.restore :\n                    (typeof icons.maximize === \"function\") ? icons.maximize(node) : icons.maximize}\n            </button>\n        );\n    }\n\n    if (!node.isMaximized() && node.isEnableClose()) {\n        const title = layout.i18nName(I18nLabel.Close_Tabset);\n        const btns = showHeader ? headerButtons : buttons;\n        btns.push(\n            <button\n                key=\"close\"\n                data-layout-path={path + \"/button/close\"}\n                title={title}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE)}\n                onClick={onClose}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {(typeof icons.closeTabset === \"function\") ? icons.closeTabset(node) : icons.closeTabset}\n            </button>\n        );\n    }\n\n    toolbar = (\n        <div key=\"toolbar\" ref={toolbarRef}\n            className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR)}\n            onMouseDown={onInterceptMouseDown}\n            onTouchStart={onInterceptMouseDown}\n            onDragStart={(e) => { e.preventDefault() }}\n        >\n            {buttons}\n        </div>\n    );\n\n    let header;\n    let tabStrip;\n\n    let tabStripClasses = cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER);\n    if (node.getClassNameTabStrip() !== undefined) {\n        tabStripClasses += \" \" + node.getClassNameTabStrip();\n    }\n    tabStripClasses += \" \" + CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER_ + node.getTabLocation();\n\n    if (node.isActive() && !showHeader) {\n        tabStripClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n    }\n\n    if (node.isMaximized() && !showHeader) {\n        tabStripClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n    }\n\n    if (showHeader) {\n\n        const headerToolbar = (\n            <div key=\"toolbar\" ref={toolbarRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR)}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n                onDragStart={(e) => { e.preventDefault() }}\n            >\n                {headerButtons}\n            </div>\n        );\n\n        let tabHeaderClasses = cm(CLASSES.FLEXLAYOUT__TABSET_HEADER);\n        if (node.isActive()) {\n            tabHeaderClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n        }\n        if (node.isMaximized()) {\n            tabHeaderClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n        }\n        if (node.getClassNameHeader() !== undefined) {\n            tabHeaderClasses += \" \" + node.getClassNameHeader();\n        }\n\n        header = (\n            <div className={tabHeaderClasses} style={{ height: node.getHeaderHeight() + \"px\" }}\n                data-layout-path={path + \"/header\"}\n                onMouseDown={onMouseDown}\n                onContextMenu={onContextMenu}\n                onClick={onAuxMouseClick}\n                onAuxClick={onAuxMouseClick}\n                onTouchStart={onMouseDown}>\n                <div className={cm(CLASSES.FLEXLAYOUT__TABSET_HEADER_CONTENT)}>{headerContent}</div>\n                {headerToolbar}\n            </div>\n        );\n    }\n\n    const tabStripStyle: { [key: string]: string } = { height: node.getTabStripHeight() + \"px\" };\n    tabStrip = (\n        <div className={tabStripClasses} style={tabStripStyle}\n            data-layout-path={path + \"/tabstrip\"}\n            onMouseDown={onMouseDown}\n            onContextMenu={onContextMenu}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onTouchStart={onMouseDown}>\n            <div ref={tabbarInnerRef} className={cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER) + \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_ + node.getTabLocation())}>\n                <div\n                    style={{ left: position }}\n                    className={cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER) + \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_ + node.getTabLocation())}\n                >\n                    {tabs}\n                </div>\n            </div>\n            {toolbar}\n        </div>\n    );\n\n    style = layout.styleFont(style);\n\n    var placeHolder: React.ReactNode = undefined;\n    if (node.getChildren().length === 0) {\n        const placeHolderCallback = layout.getTabSetPlaceHolderCallback();\n        if (placeHolderCallback) {\n            placeHolder = placeHolderCallback(node);\n        }\n    }\n\n    const center = <div className={cm(CLASSES.FLEXLAYOUT__TABSET_CONTENT)}>\n        {placeHolder}\n    </div>\n\n    var content;\n    if (node.getTabLocation() === \"top\") {\n        content = <>{header}{tabStrip}{center}</>;\n    } else {\n        content = <>{header}{center}{tabStrip}</>;\n    }\n\n    return (\n        <div ref={selfRef}\n            dir=\"ltr\"\n            data-layout-path={path}\n            style={style}\n            className={cm(CLASSES.FLEXLAYOUT__TABSET)}\n            onWheel={onMouseWheel}>\n            {content}\n        </div>\n    );\n};\n\n\n"]},"metadata":{},"sourceType":"script"}