{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rect = void 0;\n\nvar Orientation_1 = require(\"./Orientation\");\n\nvar Rect =\n/** @class */\nfunction () {\n  function Rect(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  Rect.empty = function () {\n    return new Rect(0, 0, 0, 0);\n  };\n\n  Rect.fromElement = function (element) {\n    var _a = element.getBoundingClientRect(),\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n\n    return new Rect(x, y, width, height);\n  };\n\n  Rect.prototype.clone = function () {\n    return new Rect(this.x, this.y, this.width, this.height);\n  };\n\n  Rect.prototype.equals = function (rect) {\n    if (this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Rect.prototype.getBottom = function () {\n    return this.y + this.height;\n  };\n\n  Rect.prototype.getRight = function () {\n    return this.x + this.width;\n  };\n\n  Rect.prototype.getCenter = function () {\n    return {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2\n    };\n  };\n\n  Rect.prototype.positionElement = function (element, position) {\n    this.styleWithPosition(element.style, position);\n  };\n\n  Rect.prototype.styleWithPosition = function (style, position) {\n    if (position === void 0) {\n      position = \"absolute\";\n    }\n\n    style.left = this.x + \"px\";\n    style.top = this.y + \"px\";\n    style.width = Math.max(0, this.width) + \"px\"; // need Math.max to prevent -ve, cause error in IE\n\n    style.height = Math.max(0, this.height) + \"px\";\n    style.position = position;\n    return style;\n  };\n\n  Rect.prototype.contains = function (x, y) {\n    if (this.x <= x && x <= this.getRight() && this.y <= y && y <= this.getBottom()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Rect.prototype.removeInsets = function (insets) {\n    return new Rect(this.x + insets.left, this.y + insets.top, Math.max(0, this.width - insets.left - insets.right), Math.max(0, this.height - insets.top - insets.bottom));\n  };\n\n  Rect.prototype.centerInRect = function (outerRect) {\n    this.x = (outerRect.width - this.width) / 2;\n    this.y = (outerRect.height - this.height) / 2;\n  };\n  /** @internal */\n\n\n  Rect.prototype._getSize = function (orientation) {\n    var prefSize = this.width;\n\n    if (orientation === Orientation_1.Orientation.VERT) {\n      prefSize = this.height;\n    }\n\n    return prefSize;\n  };\n\n  Rect.prototype.toString = function () {\n    return \"(Rect: x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n  };\n\n  return Rect;\n}();\n\nexports.Rect = Rect;","map":{"version":3,"mappings":"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","names":["x","y","width","height","Rect","element","getBoundingClientRect","rect","position","styleWithPosition","style","left","top","Math","max","getRight","getBottom","insets","right","bottom","outerRect","orientation","prefSize","Orientation_1","VERT","exports"],"sources":["C:\\Users\\mmorrone\\UnityProjects\\my-app\\node_modules\\flexlayout-react\\src\\Rect.ts"],"sourcesContent":["import { Orientation } from \"./Orientation\";\n\nexport class Rect {\n    static empty() {\n        return new Rect(0, 0, 0, 0);\n    }\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    static fromElement(element: Element) {\n        let { x, y, width, height } = element.getBoundingClientRect();\n        return new Rect(x, y, width, height);\n    }\n\n    clone() {\n        return new Rect(this.x, this.y, this.width, this.height);\n    }\n\n    equals(rect: Rect) {\n        if (this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getBottom() {\n        return this.y + this.height;\n    }\n\n    getRight() {\n        return this.x + this.width;\n    }\n\n    getCenter() {\n        return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n    }\n\n    positionElement(element: HTMLElement, position?: string) {\n        this.styleWithPosition(element.style, position);\n    }\n\n    styleWithPosition(style: Record<string, any>, position: string = \"absolute\") {\n        style.left = this.x + \"px\";\n        style.top = this.y + \"px\";\n        style.width = Math.max(0, this.width) + \"px\"; // need Math.max to prevent -ve, cause error in IE\n        style.height = Math.max(0, this.height) + \"px\";\n        style.position = position;\n        return style;\n    }\n\n    contains(x: number, y: number) {\n        if (this.x <= x && x <= this.getRight() && this.y <= y && y <= this.getBottom()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    removeInsets(insets: { top: number; left: number; bottom: number; right: number }) {\n        return new Rect(this.x + insets.left, this.y + insets.top, Math.max(0, this.width - insets.left - insets.right), Math.max(0, this.height - insets.top - insets.bottom));\n    }\n\n    centerInRect(outerRect: Rect) {\n        this.x = (outerRect.width - this.width) / 2;\n        this.y = (outerRect.height - this.height) / 2;\n    }\n\n    /** @internal */\n    _getSize(orientation: Orientation) {\n        let prefSize = this.width;\n        if (orientation === Orientation.VERT) {\n            prefSize = this.height;\n        }\n        return prefSize;\n    }\n\n    toString() {\n        return \"(Rect: x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n    }\n}\n"]},"metadata":{},"sourceType":"script"}